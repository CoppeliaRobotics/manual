<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Remote API</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Remote API</h1>

<p>The remote API is one of <a href="meansOfCommunication.htm">several ways an application can connect with CoppeliaSim</a>. It allows communication between CoppeliaSim and an external application (i.e. an application running in a different process, or on a different machine), is cross-platform, and supports the exact same API function calls as from within a CoppeliaSim script. It comes in two distinct versions/frameworks:</p>

<li><a href="zmqRemoteApiOverview.htm">The ZeroMQ remote API</a>: with support of Python,  C++, Matlab, Octave, Java, Lua and Rust clients.</li>
<li><a href="wsRemoteApiOverview.htm">The WebSocket remote API</a>: with support of JavaScript clients.</li>

<p>As an example, a Python ZeroMQ remote API client receiving and applying back a <a href="visionSensors.htm">vision sensor</a> image could look like:</p>

<code class="hljs language-python coppelia-zmq-remote-api-client">from time import sleep
from coppeliasim_zmqremoteapi_client import RemoteAPIClient

client = RemoteAPIClient()
sim = client.getobject('sim')
sensor1Handle = sim.getObject('/VisionSensor')
sensor2Handle = sim.getObject('/PassiveVisionSensor')

sim.startSimulation()
while sim.getSimulationTime() &lt; 10:
    image, resolution = sim.getVisionSensorImg(sensor1Handle)
    sim.setVisionSensorImg(sensor2Handle, image)
    sleep(0.01)
sim.stopSimulation()</code>


<br>
<br>
 </tr>
</table>
</div>


<link rel="stylesheet" href="../js/hljs/11.8.0/styles/default.min.css" />
<script src="../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../js/hljs/11.8.0/languages/xml.min.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>

</html>
