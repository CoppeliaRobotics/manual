<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Convex hull</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Convex hull</h1>

<p>CoppeliaSim allows calculating and adding the convex hull of specified <a href="objects.htm">objects</a>. The convex hull of a collection of meshes is the smallest convex envelope that encompasses all meshes. CoppeliaSim allows extracting the convex hull of <a href="measurableObjects.htm">measurable objects</a> only.</p>
<p>To add a convex hull, select objects that you want to have included in the convex hull and select [Modules &gt; Geometry / Mesh &gt; Convex hull...].</p>

<p>Depending on situations, convex hulls can drastically reduce calculation times in case of <a href="distanceCalculation.htm">distance calculations</a> or <a href="proximitySensors.htm">proximity sensor</a> simulations for instance. <a href="collisionDetection.htm">Collision detection</a> can also be performed faster if a rougher approximation (i.e. the convex hull) of a complex <a href="shapes.htm">shape</a> is used instead. One can also extract the convex hull of a <a href="models.htm">model</a> (e.g. robot), then make it invisible, but perform all calculations (collision detection, distance calculations, etc.) using the invisible convex hull instead of the complex model.<br>
</p>

<p align=center><img src="images/convexHull.jpg"></p>
<p class=imageLabel>[Objects forming a robot model (left) and corresponding simplified representation as convex hull (right)]</p>
<br>

<p>See also the <a href="simConvex/simConvex.htm">simConvex API</a> and <a href="convexDecomposition.htm">calculation of a shape's convex decomposition</a>.</p>


<br>
<br>

  </tr>
</table> 
</div>  
  
  
</body>

</html>
