<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simInsertPointsIntoPointCloud <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>simInsertPointsIntoPointCloud <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></h2>
    <p>Inserts points into a <a href="../pointClouds.htm">point cloud</a>
        </p>
</div>

<div class="regApiSection">
    <h3>C++ synopsis</h3>
    <code class="hljs language-c++ coppelia-coppeliasim-plugin">int simInsertPointsIntoPointCloud(int pointCloudHandle, int options, const double* pts, int ptCnt, 
                                  const unsigned char* color, void* optionalValues)</code>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>pointCloudHandle</strong>: the handle of the point cloud</li>
                <li><strong>options</strong>: bit-coded:
                    <ul>
                        <li>bit0 set (1): specified points are relative to the point cloud reference frame, otherwise they are relative to the world reference frame</li>
                        <li>bit1 set (2): the color array contains one RGB triple per point. Otherwise it contains a single RGB triple</li>
                    </ul>
                </li>
                <li><strong>pts</strong>: a pointer to the point positions specified as x/y/z coordinates</li>
                <li><strong>ptCnt</strong>: the number of point coordinates contained in pts</li>
                <li><strong>color</strong>: a pointer to one or several RGB triplets, specifying the red, green and blue color components (0-255). Can be nullptr.</li>
                <li><strong>optionalValues</strong>: can be used to specify additional parameters, or set to nullptr for default parameter values:
                    <ul>
                        <li>((int*)optionalValues)[0]: an integer value that is bit coded. Each bit indicates which additional parameter will be taken into account:</li>
                        <li>((float*)optionalValues)[1]: <strong>duplicateTolerance</strong>: a minimum distance tolerance value that is used to avoid duplicate points. To have this parameter taken into account, set bit0 to 1 in ((int*)optionalValues)[0]. Point insertion is slower when the duplicate tolerance is &gt; then 0.0</li>
                    </ul>
                </li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return</h3>
    
            <ul>
                <li>-1 if operation was not successful, otherwise the total number of points in the point cloud</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="simRemovePointsFromPointCloud_cpp.htm">simRemovePointsFromPointCloud</a></li>
<li><a href="../apiFunctions.htm#pointCloud">point cloud related functions</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
