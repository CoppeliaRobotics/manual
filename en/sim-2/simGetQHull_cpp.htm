<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simGetQHull <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>simGetQHull <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></h2>
    <p>Retrieves the convex hull mesh from the specified vertices</p>
</div>

<div class="regApiSection">
    <h3>C++ synopsis</h3>
    <code class="hljs language-c++ coppelia-coppeliasim-plugin">int simGetQHull(const double* inVertices, int inVerticesL, double** verticesOut, int* verticesOutL, 
                int** indicesOut, int* indicesOutL, int reserved1, const double* reserved2)</code>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>inVertices</strong>: pointer to the input vertices (succession of x/y/z values).</li>
                <li><strong>inVerticesL</strong>: number of input vertices times 3.</li>
                <li><strong>verticesOut</strong>: pointer to a pointer to the output vertices. The output vertices are allocated by CoppeliaSim and the user is in charge of releasing the buffer via <a href="simReleaseBuffer_cpp.htm">simReleaseBuffer</a>.</li>
                <li><strong>verticesOutL</strong>: pointer to the number of output vertices times 3.</li>
                <li><strong>indicesOut</strong>: pointer to a pointer to the output indices. The output indices are allocated by CoppeliaSim and the user is in charge of releasing the buffer via <a href="simReleaseBuffer_cpp.htm">simReleaseBuffer</a>.</li>
                <li><strong>indicesOutL</strong>: pointer to the number of output indices (i.e. the number of triangles times 3).</li>
                <li><strong>reserved1</strong>: reserved, set to 0.</li>
                <li><strong>reserved2</strong>: reserved, set to nullptr.</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return</h3>
    
            <ul>
                <li>-1 or 0 if operation was not successful.</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="simConvexDecompose_cpp.htm">simConvexDecompose</a></li>
<li><a href="simGetDecimatedMesh_cpp.htm">simGetDecimatedMesh</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
