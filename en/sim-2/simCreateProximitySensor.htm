<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>sim.createProximitySensor <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>sim.createProximitySensor <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></h2>
    <p>Creates a <a href="../proximitySensors.htm">proximity sensor</a>
        </p>
</div>

<div class="regApiSection">
    <h3>Synopsis</h3>
    <div class="multi-language-switcher">
    	<code class="hljs language-python coppelia-coppeliasim-script">int sensorHandle = sim.createProximitySensor(int sensorType, int subType, int options, 
                                             list intParams, list floatParams)</code>
        
        <code class="hljs language-lua coppelia-coppeliasim-script">int sensorHandle = sim.createProximitySensor(int sensorType, int subType, int options, 
                                             int[8] intParams, float[15] floatParams)</code>
    </div>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>sensorType</strong>: desired <a href="../apiConstants.htm#sceneObjectSubTypes">proximity sensor type</a> (e.g. sim.proximitysensor_cone)</li>
                <li><strong>subType</strong>: deprecated. Set to 16</li>
                <li><strong>options</strong>: bit-coded options:
                    <ul>
                        <li>bit0 set (1): the sensor will be explicitly handled</li>
                        <li>bit1 set (2): reserved. Set to 0</li>
                        <li>bit2 set (4): the detection volume is not shown</li>
                        <li>bit3 set (8): front faces are not detected</li>
                        <li>bit4 set (16): back faces are not detected</li>
                        <li>bit5 set (32): fast detection (i.e. not exact detection)</li>
                        <li>bit6 set (64): the normal of the detected surface with the detection ray will have to lie below a specified threshold angle</li>
                        <li>bit8 set (256): smallest distance threshold will be active</li>
                        <li>bit9 set (512): randomized detection (only with ray-type proximity sensors)</li>
                    </ul>
                </li>
                <li><strong>intParams</strong>: 8 integer parameters (indexing (i) starts from 0 for Python and 1 for Lua):
                    <ul>
                        <li>intParams[i+0]: face count (volume description)</li>
                        <li>intParams[i+1]: face count far (volume description)</li>
                        <li>intParams[i+2]: subdivisions (volume description)</li>
                        <li>intParams[i+3]: subdivisions far (volume description)</li>
                        <li>intParams[i+4]: randomized detection, sample count per reading</li>
                        <li>intParams[i+5]: randomized detection, individual ray detection count for triggering</li>
                        <li>intParams[i+6]: reserved. Set to 0</li>
                        <li>intParams[i+7]: reserved. Set to 0</li>
                    </ul>
                </li>
                <li><strong>floatParams</strong>: 15 floating point parameters (indexing (i) starts from 0 for Python and 1 for Lua):
                    <ul>
                        <li>floatParams[i+0]: offset (volume description)</li>
                        <li>floatParams[i+1]: range (volume description)</li>
                        <li>floatParams[i+2]: x size (volume description)</li>
                        <li>floatParams[i+3]: y size (volume description)</li>
                        <li>floatParams[i+4]: x size far (volume description)</li>
                        <li>floatParams[i+5]: y size far (volume description)</li>
                        <li>floatParams[i+6]: inside gap (volume description)</li>
                        <li>floatParams[i+7]: radius (volume description)</li>
                        <li>floatParams[i+8]: radius far (volume description)</li>
                        <li>floatParams[i+9]: angle (volume description)</li>
                        <li>floatParams[i+10]: threshold angle for limited angle detection (see bit 6 above)</li>
                        <li>floatParams[i+11]: smallest detection distance (see bit 8 above)</li>
                        <li>floatParams[i+12]: sensing point size</li>
                        <li>floatParams[i+13]: reserved. Set to 0.0</li>
                        <li>floatParams[i+14]: reserved. Set to 0.0</li>
                    </ul>
                </li>
                <li><strong>reserved</strong>: set to nullptr</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return values</h3>
    
            <ul>
                <li><strong>sensorHandle</strong>: handle of the force sensor</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p></p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
