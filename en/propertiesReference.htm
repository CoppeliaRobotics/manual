<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Property strings</title>
<link rel="stylesheet" type="text/css" href="../style.css">
<style>
    body {
        margin: 0;
        padding: 20px;
    }
    .grid-list {
        display: grid;
        grid-template-columns: 400px 1fr;
        gap: 3px;
        max-width: 900px;
    }
    .grid-list dt {
    }
    .grid-list dd {
        margin: 0;
    }
</style>
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Properties reference</h1>

<p>Following lists all <a href="properties.htm">properties</a> currently available:</p>

<ul>
<li><a href="#app">App properties</a></li>
<li><a href="#scene">Scene properties</a></li>
<li><a href="#object">Scene object common properties</a></li>
<li><a href="#shape">Shape properties</a></li>
<li><a href="#joint">Joint properties</a></li>
<li><a href="#dummy">Dummy properties</a></li>
<li><a href="#light">Light properties</a></li>
<li><a href="#camera">Camera properties</a></li>
<li><a href="#visionSensor">Vision sensor properties</a></li>
<li><a href="#proximitySensor">Proximity sensor properties</a></li>
<li><a href="#forceSensor">Force sensor properties</a></li>
<li><a href="#graph">Graph properties</a></li>
<li><a href="#pointCloud">Point cloud properties</a></li>
<li><a href="#ocTree">OC-Tree properties</a></li>
<li><a href="#script">Script properties</a></li>
<li><a href="#mesh">Mesh properties</a></li>
</ul>
<div class="constantsGroup">
<h2><a name="app"></a>App properties <span style="font-size: 60%;">(target is sim.handle_app)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="addOnPath"><strong>addOnPath</strong>  (string, not writable):</div></dt><dd>Add-on path</dd>
<dt><div class="appArg1"><strong>appArg1</strong>  (string):</div></dt><dd>App arg. 1</dd>
<dt><div class="appArg2"><strong>appArg2</strong>  (string):</div></dt><dd>App arg. 2</dd>
<dt><div class="appArg3"><strong>appArg3</strong>  (string):</div></dt><dd>App arg. 3</dd>
<dt><div class="appArg4"><strong>appArg4</strong>  (string):</div></dt><dd>App arg. 4</dd>
<dt><div class="appArg5"><strong>appArg5</strong>  (string):</div></dt><dd>App arg. 5</dd>
<dt><div class="appArg6"><strong>appArg6</strong>  (string):</div></dt><dd>App arg. 6</dd>
<dt><div class="appArg7"><strong>appArg7</strong>  (string):</div></dt><dd>App arg. 7</dd>
<dt><div class="appArg8"><strong>appArg8</strong>  (string):</div></dt><dd>App arg. 8</dd>
<dt><div class="appArg9"><strong>appArg9</strong>  (string):</div></dt><dd>App arg. 9</dd>
<dt><div class="appPath"><strong>appPath</strong>  (string, not writable):</div></dt><dd>Application path</dd>
<dt><div class="browserEnabled"><strong>browserEnabled</strong>  (bool):</div></dt><dd>Browser enabled</dd>
<dt><div class="canSave"><strong>canSave</strong>  (bool, not writable):</div></dt><dd>Whether save operation is allowed in given state</dd>
<dt><div class="consoleVerbosity"><strong>consoleVerbosity</strong>  (int):</div></dt><dd>Console verbosity</dd>
<dt><div class="consoleVerbosityStr"><strong>consoleVerbosityStr</strong>  (string, not readable):</div></dt><dd>Console verbosity string, only for client app</dd>
<dt><div class="defaultPython"><strong>defaultPython</strong>  (string, not writable):</div></dt><dd>Default Python interpreter</dd>
<dt><div class="defaultRotationStepSize"><strong>defaultRotationStepSize</strong>  (double):</div></dt><dd>Default rotation step size</dd>
<dt><div class="defaultTranslationStepSize"><strong>defaultTranslationStepSize</strong>  (double):</div></dt><dd>Default translation step size</dd>
<dt><div class="dialogVerbosity"><strong>dialogVerbosity</strong>  (int):</div></dt><dd>Dialog verbosity</dd>
<dt><div class="dialogVerbosityStr"><strong>dialogVerbosityStr</strong>  (string, not readable):</div></dt><dd>Dialog verbosity string, only for client app</dd>
<dt><div class="displayEnabled"><strong>displayEnabled</strong>  (bool):</div></dt><dd>Display enabled</dd>
<dt><div class="execUnsafe"><strong>execUnsafe</strong>  (bool, not writable):</div></dt><dd>Execute unsafe</dd>
<dt><div class="execUnsafeExt"><strong>execUnsafeExt</strong>  (bool, not writable):</div></dt><dd>Execute unsafe for code triggered externally</dd>
<dt><div class="flavor"><strong>flavor</strong>  (int, not writable):</div></dt><dd>Flavor</dd>
<dt><div class="headlessMode"><strong>headlessMode</strong>  (int, not writable):</div></dt><dd>Headless mode (0: not headless, 1: GUI suppressed, 2: headless library)</dd>
<dt><div class="hierarchyEnabled"><strong>hierarchyEnabled</strong>  (bool):</div></dt><dd>Hierarchy enabled</dd>
<dt><div class="idleFps"><strong>idleFps</strong>  (int):</div></dt><dd>Desired maximum rendering frames per second, when simulation is not running</dd>
<dt><div class="importExportPath"><strong>importExportPath</strong>  (string):</div></dt><dd>Import/export path</dd>
<dt><div class="legacyMachineId"><strong>legacyMachineId</strong>  (string, not writable):</div></dt><dd>Legacy machine ID</dd>
<dt><div class="luaPath"><strong>luaPath</strong>  (string, not writable):</div></dt><dd>Lua path</dd>
<dt><div class="machineId"><strong>machineId</strong>  (string, not writable):</div></dt><dd>Machine ID</dd>
<dt><div class="modelPath"><strong>modelPath</strong>  (string):</div></dt><dd>Model path</dd>
<dt><div class="mujocoPath"><strong>mujocoPath</strong>  (string, not writable):</div></dt><dd>MuJoCo path</dd>
<dt><div class="notifyDeprecated"><strong>notifyDeprecated</strong>  (int, not writable):</div></dt><dd>Notify deprecated API (0: off, 1: light, 2: full)</dd>
<dt><div class="platform"><strong>platform</strong>  (int, not writable):</div></dt><dd>OS</dd>
<dt><div class="processCnt"><strong>processCnt</strong>  (int, not writable):</div></dt><dd>Overall processes</dd>
<dt><div class="processId"><strong>processId</strong>  (int, not writable):</div></dt><dd>Process ID</dd>
<dt><div class="productVersion"><strong>productVersion</strong>  (string, not writable):</div></dt><dd>Product version (string)</dd>
<dt><div class="productVersionNb"><strong>productVersionNb</strong>  (int, not writable):</div></dt><dd>Product version (number)</dd>
<dt><div class="protocolVersion"><strong>protocolVersion</strong>  (int, not writable):</div></dt><dd>Protocol version</dd>
<dt><div class="pythonPath"><strong>pythonPath</strong>  (string, not writable):</div></dt><dd>Python path</dd>
<dt><div class="qtVersion"><strong>qtVersion</strong>  (int, not writable):</div></dt><dd>Qt version</dd>
<dt><div class="randomFloat"><strong>randomFloat</strong>  (double, not writable):</div></dt><dd>Random number</dd>
<dt><div class="randomQuaternion"><strong>randomQuaternion</strong>  (<a href="positionOrientationTransformation.htm#quaternion">quaternion</a>, not writable):</div></dt><dd>Random quaternion</dd>
<dt><div class="resourcePath"><strong>resourcePath</strong>  (string, not writable):</div></dt><dd>Resource path</dd>
<dt><div class="sandboxLang"><strong>sandboxLang</strong>  (string, not writable):</div></dt><dd>Default sandbox language</dd>
<dt><div class="scenePath"><strong>scenePath</strong>  (string):</div></dt><dd>Scene path</dd>
<dt><div class="sceneTempPath"><strong>sceneTempPath</strong>  (string, not writable):</div></dt><dd>Scene temporary path</dd>
<dt><div class="sessionId"><strong>sessionId</strong>  (string, not writable):</div></dt><dd>Session ID</dd>
<dt><div class="settingsPath"><strong>settingsPath</strong>  (string, not writable):</div></dt><dd>Settings path</dd>
<dt><div class="statusbarVerbosity"><strong>statusbarVerbosity</strong>  (int):</div></dt><dd>Statusbar verbosity</dd>
<dt><div class="statusbarVerbosityStr"><strong>statusbarVerbosityStr</strong>  (string, not readable):</div></dt><dd>Statusbar verbosity string, only for client app</dd>
<dt><div class="systemPath"><strong>systemPath</strong>  (string, not writable):</div></dt><dd>System path</dd>
<dt><div class="tempPath"><strong>tempPath</strong>  (string, not writable):</div></dt><dd>Temporary path</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="scene"></a>Scene properties <span style="font-size: 60%;">(target is sim.handle_scene)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="acknowledgment"><strong>acknowledgment</strong>  (string):</div></dt><dd>Scene acknowledgment</dd>
<dt><div class="ambientLight"><strong>ambientLight</strong>  (color (float[3])):</div></dt><dd>Ambient light</dd>
<dt><div class="bullet.collisionMarginScaling"><strong>bullet.collisionMarginScaling</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.computeInertias"><strong>bullet.computeInertias</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.internalScalingFull"><strong>bullet.internalScalingFull</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.internalScalingValue"><strong>bullet.internalScalingValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.iterations"><strong>bullet.iterations</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.solver"><strong>bullet.solver</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="dynamicsEnabled"><strong>dynamicsEnabled</strong>  (bool):</div></dt><dd>Dynamics enabled</dd>
<dt><div class="dynamicsEngine"><strong>dynamicsEngine</strong>  (int[]):</div></dt><dd>Selected dynamics engine index and version</dd>
<dt><div class="dynamicsStepSize"><strong>dynamicsStepSize</strong>  (double):</div></dt><dd>Dynamics step size</dd>
<dt><div class="engineProperties"><strong>engineProperties</strong>  (string):</div></dt><dd>Engine properties as JSON text</dd>
<dt><div class="finalSaveRequest"><strong>finalSaveRequest</strong>  (bool):</div></dt><dd>Lock scene and models after next scene save operation</dd>
<dt><div class="gravity"><strong>gravity</strong>  (vector[3]):</div></dt><dd>Gravity</dd>
<dt><div class="hierarchyChangeCounter"><strong>hierarchyChangeCounter</strong>  (int, not writable):</div></dt><dd>Counter of scene hierarchy changes</dd>
<dt><div class="mujoco.balanceInertias"><strong>mujoco.balanceInertias</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.boundInertia"><strong>mujoco.boundInertia</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.boundMass"><strong>mujoco.boundMass</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.computeInertias"><strong>mujoco.computeInertias</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.cone"><strong>mujoco.cone</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.contactParamsMargin"><strong>mujoco.contactParamsMargin</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.contactParamsOverride"><strong>mujoco.contactParamsOverride</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.contactParamsSolimp"><strong>mujoco.contactParamsSolimp</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.contactParamsSolref"><strong>mujoco.contactParamsSolref</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.density"><strong>mujoco.density</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.impratio"><strong>mujoco.impratio</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.integrator"><strong>mujoco.integrator</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.iterations"><strong>mujoco.iterations</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.kinematicBodiesInertia"><strong>mujoco.kinematicBodiesInertia</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.kinematicBodiesMass"><strong>mujoco.kinematicBodiesMass</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.kinematicBodiesOverrideFlags"><strong>mujoco.kinematicBodiesOverrideFlags</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.multiccd"><strong>mujoco.multiccd</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.multithreaded"><strong>mujoco.multithreaded</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.nconmax"><strong>mujoco.nconmax</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.njmax"><strong>mujoco.njmax</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.nstack"><strong>mujoco.nstack</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.rebuildTrigger"><strong>mujoco.rebuildTrigger</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.solver"><strong>mujoco.solver</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.viscosity"><strong>mujoco.viscosity</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.wind"><strong>mujoco.wind</strong>  (vector[3]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.computeInertias"><strong>newton.computeInertias</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.contactMergeTolerance"><strong>newton.contactMergeTolerance</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.exactSolver"><strong>newton.exactSolver</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.highJointAccuracy"><strong>newton.highJointAccuracy</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.iterations"><strong>newton.iterations</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.multithreading"><strong>newton.multithreading</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="objectCreationCounter"><strong>objectCreationCounter</strong>  (int, not writable):</div></dt><dd>Counter of created scene objects</dd>
<dt><div class="objectDestructionCounter"><strong>objectDestructionCounter</strong>  (int, not writable):</div></dt><dd>Counter of destroyed scene objects</dd>
<dt><div class="objectHandles"><strong>objectHandles</strong>  (int[], not writable):</div></dt><dd>Handles of all scene objects</dd>
<dt><div class="ode.computeInertias"><strong>ode.computeInertias</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.globalCfm"><strong>ode.globalCfm</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.globalErp"><strong>ode.globalErp</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.internalScalingFull"><strong>ode.internalScalingFull</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.internalScalingValue"><strong>ode.internalScalingValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.quickStepEnabled"><strong>ode.quickStepEnabled</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.quickStepIterations"><strong>ode.quickStepIterations</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="orphanHandles"><strong>orphanHandles</strong>  (int[], not writable):</div></dt><dd>Handles of all orphan scene objects</dd>
<dt><div class="pauseSimulationAtError"><strong>pauseSimulationAtError</strong>  (bool):</div></dt><dd>Pause simulation on script error</dd>
<dt><div class="pauseSimulationAtTime"><strong>pauseSimulationAtTime</strong>  (bool):</div></dt><dd>Pause simulation when simulation time exceeds a threshold</dd>
<dt><div class="realtimeModifier"><strong>realtimeModifier</strong>  (double):</div></dt><dd>Real-time multiplication factor</dd>
<dt><div class="realtimeSimulation"><strong>realtimeSimulation</strong>  (bool):</div></dt><dd>Real-time simulation</dd>
<dt><div class="removeNewObjectsAtEnd"><strong>removeNewObjectsAtEnd</strong>  (bool):</div></dt><dd>Remove new scene objects at simulation end</dd>
<dt><div class="resetSceneAtEnd"><strong>resetSceneAtEnd</strong>  (bool):</div></dt><dd>Reset scene to initial state at simulation end</dd>
<dt><div class="saveCalculationStructs"><strong>saveCalculationStructs</strong>  (bool):</div></dt><dd>Save operation also saves existing calculation structures</dd>
<dt><div class="sceneIsLocked"><strong>sceneIsLocked</strong>  (bool, not writable):</div></dt><dd>Scene is locked</dd>
<dt><div class="scenePath"><strong>scenePath</strong>  (string):</div></dt><dd>Scene path</dd>
<dt><div class="sceneUid"><strong>sceneUid</strong>  (int, not writable):</div></dt><dd>Scene unique identifier</dd>
<dt><div class="sceneUidString"><strong>sceneUidString</strong>  (string, not writable):</div></dt><dd>Scene unique identifier string</dd>
<dt><div class="selectionHandles"><strong>selectionHandles</strong>  (int[]):</div></dt><dd>Handles of selected scene objects</dd>
<dt><div class="showContactPoints"><strong>showContactPoints</strong>  (bool):</div></dt><dd>Show contact points</dd>
<dt><div class="simulationState"><strong>simulationState</strong>  (int, not writable):</div></dt><dd>Simulation state</dd>
<dt><div class="simulationTime"><strong>simulationTime</strong>  (double, not writable):</div></dt><dd>Simulation time</dd>
<dt><div class="speedModifier"><strong>speedModifier</strong>  (int):</div></dt><dd>Speed modifier</dd>
<dt><div class="stepCount"><strong>stepCount</strong>  (int, not writable):</div></dt><dd>Counter of simulation steps</dd>
<dt><div class="stepsPerRendering"><strong>stepsPerRendering</strong>  (int):</div></dt><dd>Simulation steps per frame</dd>
<dt><div class="timeStep"><strong>timeStep</strong>  (double):</div></dt><dd>Simulation time step</dd>
<dt><div class="timeToPause"><strong>timeToPause</strong>  (double):</div></dt><dd>Time at which simulation should pause</dd>
<dt><div class="visibilityLayers"><strong>visibilityLayers</strong>  (int):</div></dt><dd>Currently active visibility layers</dd>
<dt><div class="vortex.autoSleep"><strong>vortex.autoSleep</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.computeInertias"><strong>vortex.computeInertias</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.constraintsAngularCompliance"><strong>vortex.constraintsAngularCompliance</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.constraintsAngularDamping"><strong>vortex.constraintsAngularDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.constraintsAngularKineticLoss"><strong>vortex.constraintsAngularKineticLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.constraintsLinearCompliance"><strong>vortex.constraintsLinearCompliance</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.constraintsLinearDamping"><strong>vortex.constraintsLinearDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.constraintsLinearKineticLoss"><strong>vortex.constraintsLinearKineticLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.contactTolerance"><strong>vortex.contactTolerance</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.multithreading"><strong>vortex.multithreading</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="object"></a>Scene object common properties <span style="font-size: 60%;">(target is a scene object)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="alias"><strong>alias</strong>  (string):</div></dt><dd>Scene object alias</dd>
<dt><div class="bbHSize"><strong>bbHSize</strong>  (vector[3], not writable):</div></dt><dd>Bounding box half sizes</dd>
<dt><div class="bbPose"><strong>bbPose</strong>  (<a href="positionOrientationTransformation.htm#pose">pose</a>, not writable):</div></dt><dd>Bounding box local pose</dd>
<dt><div class="calcLinearVelocity"><strong>calcLinearVelocity</strong>  (vector[3], not writable):</div></dt><dd>Calculated scene object linear velocity vector</dd>
<dt><div class="calcRotationAxis"><strong>calcRotationAxis</strong>  (vector[3], not writable):</div></dt><dd>Calculated scene object rotation axis</dd>
<dt><div class="calcRotationVelocity"><strong>calcRotationVelocity</strong>  (double, not writable):</div></dt><dd>Calculated scene object rotation velocity</dd>
<dt><div class="cannotDelete"><strong>cannotDelete</strong>  (bool):</div></dt><dd>Scene object cannot be deleted while simulation is not running</dd>
<dt><div class="cannotDeleteInSim"><strong>cannotDeleteInSim</strong>  (bool):</div></dt><dd>Scene object cannot be deleted while simulation is running</dd>
<dt><div class="childOrder"><strong>childOrder</strong>  (int, not writable):</div></dt><dd>Child order</dd>
<dt><div class="collapsed"><strong>collapsed</strong>  (bool):</div></dt><dd>Collapsed hierarchy</dd>
<dt><div class="collectionSelfCollisionIndicator"><strong>collectionSelfCollisionIndicator</strong>  (int):</div></dt><dd>Collection self collision indicator</dd>
<dt><div class="collidable"><strong>collidable</strong>  (bool):</div></dt><dd>Collidable</dd>
<dt><div class="depthInvisible"><strong>depthInvisible</strong>  (bool):</div></dt><dd>Scene object is invisible for the depth buffer during a click operation</dd>
<dt><div class="detectable"><strong>detectable</strong>  (bool):</div></dt><dd>Detectable</dd>
<dt><div class="dna"><strong>dna</strong>  (<a href="buffers.htm">buffer</a>, not writable):</div></dt><dd>Scene object DNA</dd>
<dt><div class="dynamicFlag"><strong>dynamicFlag</strong>  (int, not writable):</div></dt><dd>Dynamic flag</dd>
<dt><div class="dynamicIcon"><strong>dynamicIcon</strong>  (int, not writable):</div></dt><dd>Dynamic icon</dd>
<dt><div class="hideFromModelBB"><strong>hideFromModelBB</strong>  (bool):</div></dt><dd>Scene object is not part of a parent model's bounding box</dd>
<dt><div class="hierarchyColor"><strong>hierarchyColor</strong>  (int):</div></dt><dd>Hierarchy color index</dd>
<dt><div class="ignoreViewFitting"><strong>ignoreViewFitting</strong>  (bool):</div></dt><dd>View fitting is ignored for this scene object</dd>
<dt><div class="layer"><strong>layer</strong>  (int):</div></dt><dd>Visibility layer</dd>
<dt><div class="measurable"><strong>measurable</strong>  (bool):</div></dt><dd>Measurable</dd>
<dt><div class="modelAcknowledgment"><strong>modelAcknowledgment</strong>  (string):</div></dt><dd>Model acknowledgment</dd>
<dt><div class="modelBase"><strong>modelBase</strong>  (bool):</div></dt><dd>Model base flag, indicates the scene object is the base of a model</dd>
<dt><div class="modelInvisible"><strong>modelInvisible</strong>  (bool, not writable):</div></dt><dd>Inherited model invisibility</dd>
<dt><div class="modelNotCollidable"><strong>modelNotCollidable</strong>  (bool):</div></dt><dd>Model is not collidable</dd>
<dt><div class="modelNotDetectable"><strong>modelNotDetectable</strong>  (bool):</div></dt><dd>Model is not detectable</dd>
<dt><div class="modelNotDynamic"><strong>modelNotDynamic</strong>  (bool):</div></dt><dd>Model is not dynamic, i.e. model is static</dd>
<dt><div class="modelNotInParentBB"><strong>modelNotInParentBB</strong>  (bool):</div></dt><dd>Model is invisible to other model's bounding boxes</dd>
<dt><div class="modelNotMeasurable"><strong>modelNotMeasurable</strong>  (bool):</div></dt><dd>Model is not measurable</dd>
<dt><div class="modelNotRespondable"><strong>modelNotRespondable</strong>  (bool):</div></dt><dd>Model is not respondable</dd>
<dt><div class="modelNotVisible"><strong>modelNotVisible</strong>  (bool):</div></dt><dd>Model is not visible</dd>
<dt><div class="modelPropertyFlags"><strong>modelPropertyFlags</strong>  (int):</div></dt><dd>Model flags, redundant</dd>
<dt><div class="modelScriptsNotActive"><strong>modelScriptsNotActive</strong>  (bool):</div></dt><dd>Model scripts are not active</dd>
<dt><div class="movAltRot"><strong>movAltRot</strong>  (bool):</div></dt><dd>Alternate rotation axes enabled</dd>
<dt><div class="movAltTransl"><strong>movAltTransl</strong>  (bool):</div></dt><dd>Alternate translation axes enabled</dd>
<dt><div class="movPrefRotX"><strong>movPrefRotX</strong>  (bool):</div></dt><dd>Preferred X-axis rotation</dd>
<dt><div class="movPrefRotY"><strong>movPrefRotY</strong>  (bool):</div></dt><dd>Preferred Y-axis rotation</dd>
<dt><div class="movPrefRotZ"><strong>movPrefRotZ</strong>  (bool):</div></dt><dd>Preferred Z-axis rotation</dd>
<dt><div class="movPrefTranslX"><strong>movPrefTranslX</strong>  (bool):</div></dt><dd>Preferred X-translation</dd>
<dt><div class="movPrefTranslY"><strong>movPrefTranslY</strong>  (bool):</div></dt><dd>Preferred Y-translation</dd>
<dt><div class="movPrefTranslZ"><strong>movPrefTranslZ</strong>  (bool):</div></dt><dd>Preferred Z-translation</dd>
<dt><div class="movRotInSim"><strong>movRotInSim</strong>  (bool):</div></dt><dd>Rotation enabled when simulation is running</dd>
<dt><div class="movRotNoSim"><strong>movRotNoSim</strong>  (bool):</div></dt><dd>Rotation enabled when simulation is not running</dd>
<dt><div class="movTranslInSim"><strong>movTranslInSim</strong>  (bool):</div></dt><dd>Translation enabled when simulation is running</dd>
<dt><div class="movTranslNoSim"><strong>movTranslNoSim</strong>  (bool):</div></dt><dd>Translation enabled when simulation is not running</dd>
<dt><div class="movementOptionsFlags"><strong>movementOptionsFlags</strong>  (int):</div></dt><dd>Scene object movement flags</dd>
<dt><div class="movementPreferredAxesFlags"><strong>movementPreferredAxesFlags</strong>  (int):</div></dt><dd>Preferred axes flags (redundant)</dd>
<dt><div class="movementRelativity"><strong>movementRelativity</strong>  (int[]):</div></dt><dd>Movement relativity, linear and angular</dd>
<dt><div class="movementStepSize"><strong>movementStepSize</strong>  (double[]):</div></dt><dd>Linear and angular step sizes</dd>
<dt><div class="objectPropertyFlags"><strong>objectPropertyFlags</strong>  (int):</div></dt><dd>Scene object flags, redundant</dd>
<dt><div class="objectType"><strong>objectType</strong>  (string, not writable):</div></dt><dd>Scene object type</dd>
<dt><div class="objectUid"><strong>objectUid</strong>  (long long int, not writable):</div></dt><dd>Scene object unique identifier</dd>
<dt><div class="parentHandle"><strong>parentHandle</strong>  (int, not writable):</div></dt><dd>Parent scene object handle</dd>
<dt><div class="parentUid"><strong>parentUid</strong>  (long long int, not writable):</div></dt><dd>Parent scene object unique identifier</dd>
<dt><div class="persistentUid"><strong>persistentUid</strong>  (string, not writable):</div></dt><dd>Scene object persistent unique identifier</dd>
<dt><div class="pose"><strong>pose</strong>  (<a href="positionOrientationTransformation.htm#pose">pose</a>):</div></dt><dd>Scene object local pose</dd>
<dt><div class="selectInvisible"><strong>selectInvisible</strong>  (bool):</div></dt><dd>Scene object is invisible during a selection operation</dd>
<dt><div class="selectModel"><strong>selectModel</strong>  (bool):</div></dt><dd>Selecting the scene object instead selects the parent model</dd>
<dt><div class="selectable"><strong>selectable</strong>  (bool):</div></dt><dd>Scene object is selectable</dd>
<dt><div class="selected"><strong>selected</strong>  (bool):</div></dt><dd>Selection state</dd>
<dt><div class="visible"><strong>visible</strong>  (bool, not writable):</div></dt><dd>Whether the scene object is currently visible</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="shape"></a>Shape properties <span style="font-size: 60%;">(target is a shape)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="applyCulling"><strong>applyCulling</strong>  (bool, not readable):</div></dt><dd>Enables/disables culling for all contained meshes</dd>
<dt><div class="applyShadingAngle"><strong>applyShadingAngle</strong>  (double, not readable):</div></dt><dd>Applies a shading angle to all contained meshes</dd>
<dt><div class="applyShowEdges"><strong>applyShowEdges</strong>  (bool, not readable):</div></dt><dd>Enables/disables edges for all contained meshes</dd>
<dt><div class="bullet.angularDamping"><strong>bullet.angularDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.autoShrinkConvexMeshes"><strong>bullet.autoShrinkConvexMeshes</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.customCollisionMarginConvexEnabled"><strong>bullet.customCollisionMarginConvexEnabled</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.customCollisionMarginConvexValue"><strong>bullet.customCollisionMarginConvexValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.customCollisionMarginEnabled"><strong>bullet.customCollisionMarginEnabled</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.customCollisionMarginValue"><strong>bullet.customCollisionMarginValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.friction"><strong>bullet.friction</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.frictionOld"><strong>bullet.frictionOld</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.linearDamping"><strong>bullet.linearDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.restitution"><strong>bullet.restitution</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.stickyContact"><strong>bullet.stickyContact</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="centerOfMass"><strong>centerOfMass</strong>  (vector[3]):</div></dt><dd>Center of mass, relative to the shape's reference frame</dd>
<dt><div class="convex"><strong>convex</strong>  (bool, not writable):</div></dt><dd>Whether the shape's components are all convex or not</dd>
<dt><div class="dynAngularVelocity"><strong>dynAngularVelocity</strong>  (vector[3], not writable):</div></dt><dd>Rotational velocity, as transmitted by the physics engine</dd>
<dt><div class="dynLinearVelocity"><strong>dynLinearVelocity</strong>  (vector[3], not writable):</div></dt><dd>Linear velocity, as transmitted by the physics engine</dd>
<dt><div class="dynamic"><strong>dynamic</strong>  (bool):</div></dt><dd>Shape is dynamic, i.e. not static</dd>
<dt><div class="engineProperties"><strong>engineProperties</strong>  (string):</div></dt><dd>Engine properties as JSON text</dd>
<dt><div class="flipFaces"><strong>flipFaces</strong>  (bool, not readable):</div></dt><dd>Flips faces of all contained meshes</dd>
<dt><div class="inertia"><strong>inertia</strong>  (double[]):</div></dt><dd>Inertia tensor, relative to the shape's reference frame</dd>
<dt><div class="initAngularVelocity"><strong>initAngularVelocity</strong>  (vector[3]):</div></dt><dd>Initial rotational velocity</dd>
<dt><div class="initLinearVelocity"><strong>initLinearVelocity</strong>  (vector[3]):</div></dt><dd>Initial linear velocity</dd>
<dt><div class="kinematic"><strong>kinematic</strong>  (bool):</div></dt><dd>Special flag mainly used for MuJoCo static shapes that move and need to transmit a friction</dd>
<dt><div class="mass"><strong>mass</strong>  (double):</div></dt><dd>Mass</dd>
<dt><div class="meshes"><strong>meshes</strong>  (int[], not writable):</div></dt><dd>Mesh handles</dd>
<dt><div class="mujoco.condim"><strong>mujoco.condim</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.friction"><strong>mujoco.friction</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.margin"><strong>mujoco.margin</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.priority"><strong>mujoco.priority</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.solimp"><strong>mujoco.solimp</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.solmix"><strong>mujoco.solmix</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.solref"><strong>mujoco.solref</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.angularDrag"><strong>newton.angularDrag</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.fastMoving"><strong>newton.fastMoving</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.kineticFriction"><strong>newton.kineticFriction</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.linearDrag"><strong>newton.linearDrag</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.restitution"><strong>newton.restitution</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.staticFriction"><strong>newton.staticFriction</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.angularDamping"><strong>ode.angularDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.friction"><strong>ode.friction</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.linearDamping"><strong>ode.linearDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.maxContacts"><strong>ode.maxContacts</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.softCfm"><strong>ode.softCfm</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.softErp"><strong>ode.softErp</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="pmiQuaternion"><strong>pmiQuaternion</strong>  (<a href="positionOrientationTransformation.htm#quaternion">quaternion</a>, not writable):</div></dt><dd>Quaternion of the principal moment of inertia, relative to the shape's reference frame</dd>
<dt><div class="principalMomentOfInertia"><strong>principalMomentOfInertia</strong>  (double[], not writable):</div></dt><dd>Principal moment of inertia, relative to pmiQuaternion</dd>
<dt><div class="respondable"><strong>respondable</strong>  (bool):</div></dt><dd>Shape will transmit a collision force</dd>
<dt><div class="respondableMask"><strong>respondableMask</strong>  (int):</div></dt><dd>Respondable mask</dd>
<dt><div class="setToDynamicWithParent"><strong>setToDynamicWithParent</strong>  (bool):</div></dt><dd>Shape will be made dynamic if it receives a parent</dd>
<dt><div class="startInDynSleepMode"><strong>startInDynSleepMode</strong>  (bool):</div></dt><dd>Start in sleep mode</dd>
<dt><div class="vortex.adhesiveForce"><strong>vortex.adhesiveForce</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularNormalAxisFollowPrimaryAxis"><strong>vortex.angularNormalAxisFollowPrimaryAxis</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularNormalAxisFrictionModel"><strong>vortex.angularNormalAxisFrictionModel</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularNormalAxisFrictionValue"><strong>vortex.angularNormalAxisFrictionValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularNormalAxisSlide"><strong>vortex.angularNormalAxisSlide</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularNormalAxisSlip"><strong>vortex.angularNormalAxisSlip</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularNormalAxisStaticFrictionScale"><strong>vortex.angularNormalAxisStaticFrictionScale</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularPrimaryAxisFrictionModel"><strong>vortex.angularPrimaryAxisFrictionModel</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularPrimaryAxisFrictionValue"><strong>vortex.angularPrimaryAxisFrictionValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularPrimaryAxisSlide"><strong>vortex.angularPrimaryAxisSlide</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularPrimaryAxisSlip"><strong>vortex.angularPrimaryAxisSlip</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularPrimaryAxisStaticFrictionScale"><strong>vortex.angularPrimaryAxisStaticFrictionScale</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularSecondaryAxisFollowPrimaryAxis"><strong>vortex.angularSecondaryAxisFollowPrimaryAxis</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularSecondaryAxisFrictionModel"><strong>vortex.angularSecondaryAxisFrictionModel</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularSecondaryAxisFrictionValue"><strong>vortex.angularSecondaryAxisFrictionValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularSecondaryAxisSlide"><strong>vortex.angularSecondaryAxisSlide</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularSecondaryAxisSlip"><strong>vortex.angularSecondaryAxisSlip</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularSecondaryAxisStaticFrictionScale"><strong>vortex.angularSecondaryAxisStaticFrictionScale</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.angularVelDamping"><strong>vortex.angularVelDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.autoAngularDampingEnabled"><strong>vortex.autoAngularDampingEnabled</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.autoAngularDampingTensionRatio"><strong>vortex.autoAngularDampingTensionRatio</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.autoSleepThresholdAngularAccel"><strong>vortex.autoSleepThresholdAngularAccel</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.autoSleepThresholdAngularSpeed"><strong>vortex.autoSleepThresholdAngularSpeed</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.autoSleepThresholdLinearAccel"><strong>vortex.autoSleepThresholdLinearAccel</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.autoSleepThresholdLinearSpeed"><strong>vortex.autoSleepThresholdLinearSpeed</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.autoSleepThresholdSteps"><strong>vortex.autoSleepThresholdSteps</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.autoSlip"><strong>vortex.autoSlip</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.compliance"><strong>vortex.compliance</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.convexAsRandom"><strong>vortex.convexAsRandom</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.damping"><strong>vortex.damping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.fastMoving"><strong>vortex.fastMoving</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearPrimaryAxisFrictionModel"><strong>vortex.linearPrimaryAxisFrictionModel</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearPrimaryAxisFrictionValue"><strong>vortex.linearPrimaryAxisFrictionValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearPrimaryAxisSlide"><strong>vortex.linearPrimaryAxisSlide</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearPrimaryAxisSlip"><strong>vortex.linearPrimaryAxisSlip</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearPrimaryAxisStaticFrictionScale"><strong>vortex.linearPrimaryAxisStaticFrictionScale</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearPrimaryValue"><strong>vortex.linearPrimaryValue</strong>  (vector[3]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearSecondaryAxisFollowPrimaryAxis"><strong>vortex.linearSecondaryAxisFollowPrimaryAxis</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearSecondaryAxisFrictionModel"><strong>vortex.linearSecondaryAxisFrictionModel</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearSecondaryAxisFrictionValue"><strong>vortex.linearSecondaryAxisFrictionValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearSecondaryAxisSlide"><strong>vortex.linearSecondaryAxisSlide</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearSecondaryAxisSlip"><strong>vortex.linearSecondaryAxisSlip</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearSecondaryAxisStaticFrictionScale"><strong>vortex.linearSecondaryAxisStaticFrictionScale</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.linearVelDamping"><strong>vortex.linearVelDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.materialUniqueId"><strong>vortex.materialUniqueId</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.primitiveAsConvex"><strong>vortex.primitiveAsConvex</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.randomAsTerrain"><strong>vortex.randomAsTerrain</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.restitution"><strong>vortex.restitution</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.restitutionThreshold"><strong>vortex.restitutionThreshold</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.skinThickness"><strong>vortex.skinThickness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="joint"></a>Joint properties <span style="font-size: 60%;">(target is a joint)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="averageJointForce"><strong>averageJointForce</strong>  (double, not writable):</div></dt><dd>Force applied on average (in a simulation step)</dd>
<dt><div class="bullet.normalCfm"><strong>bullet.normalCfm</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.posPid"><strong>bullet.posPid</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.stopCfm"><strong>bullet.stopCfm</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="bullet.stopErp"><strong>bullet.stopErp</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="calcVelocity"><strong>calcVelocity</strong>  (double, not writable):</div></dt><dd>Calculated joint linear or angular velocity</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="cyclic"><strong>cyclic</strong>  (bool):</div></dt><dd>Cyclic revolute joint, has no limits</dd>
<dt><div class="dependencyMasterHandle"><strong>dependencyMasterHandle</strong>  (int):</div></dt><dd>Handle of master joint (in a dependency relationship)</dd>
<dt><div class="dependencyParams"><strong>dependencyParams</strong>  (double[]):</div></dt><dd>Dependency parameters (offset and coefficient)</dd>
<dt><div class="dynCtrlMode"><strong>dynCtrlMode</strong>  (int):</div></dt><dd>Joint control mode, when in dynamic mode</dd>
<dt><div class="dynPosMode"><strong>dynPosMode</strong>  (int):</div></dt><dd>Dynamic position mode (0: default, 1: Ruckig)</dd>
<dt><div class="dynVelMode"><strong>dynVelMode</strong>  (int):</div></dt><dd>Dynamic velocity mode (0: default, 1: Ruckig)</dd>
<dt><div class="engineProperties"><strong>engineProperties</strong>  (string):</div></dt><dd>Engine properties as JSON text</dd>
<dt><div class="interval"><strong>interval</strong>  (double[]):</div></dt><dd>Joint limits (lower and upper bounds)</dd>
<dt><div class="intrinsicError"><strong>intrinsicError</strong>  (<a href="positionOrientationTransformation.htm#pose">pose</a>, not writable):</div></dt><dd>Intrinsic error, generated by some physics engines</dd>
<dt><div class="intrinsicPose"><strong>intrinsicPose</strong>  (<a href="positionOrientationTransformation.htm#pose">pose</a>, not writable):</div></dt><dd>Intrinsic pose (includes a possible intrinsic error)</dd>
<dt><div class="jointDiameter"><strong>jointDiameter</strong>  (double):</div></dt><dd>Joint size</dd>
<dt><div class="jointForce"><strong>jointForce</strong>  (double, not writable):</div></dt><dd>Force applied</dd>
<dt><div class="jointLength"><strong>jointLength</strong>  (double):</div></dt><dd>Joint size</dd>
<dt><div class="jointMode"><strong>jointMode</strong>  (int):</div></dt><dd>Joint mode</dd>
<dt><div class="jointPosition"><strong>jointPosition</strong>  (double):</div></dt><dd>Joint linear/angular displacement</dd>
<dt><div class="jointType"><strong>jointType</strong>  (int, not writable):</div></dt><dd>Joint type</dd>
<dt><div class="maxVelAccelJerk"><strong>maxVelAccelJerk</strong>  (double[]):</div></dt><dd>Maximum velocity, acceleration and jerk</dd>
<dt><div class="mujoco.armature"><strong>mujoco.armature</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.dependencyPolyCoeff"><strong>mujoco.dependencyPolyCoeff</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.frictionLoss"><strong>mujoco.frictionLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.frictionSolimp"><strong>mujoco.frictionSolimp</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.frictionSolref"><strong>mujoco.frictionSolref</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.limitsSolimp"><strong>mujoco.limitsSolimp</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.limitsSolref"><strong>mujoco.limitsSolref</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.margin"><strong>mujoco.margin</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.posPid"><strong>mujoco.posPid</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.springDamping"><strong>mujoco.springDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.springRef"><strong>mujoco.springRef</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.springSpringDamper"><strong>mujoco.springSpringDamper</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.springStiffness"><strong>mujoco.springStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="newton.posPid"><strong>newton.posPid</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.bounce"><strong>ode.bounce</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.fudge"><strong>ode.fudge</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.normalCfm"><strong>ode.normalCfm</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.posPid"><strong>ode.posPid</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.stopCfm"><strong>ode.stopCfm</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="ode.stopErp"><strong>ode.stopErp</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="quaternion"><strong>quaternion</strong>  (<a href="positionOrientationTransformation.htm#quaternion">quaternion</a>):</div></dt><dd>Spherical joint quaternion</dd>
<dt><div class="screwLead"><strong>screwLead</strong>  (double):</div></dt><dd>Screw lead</dd>
<dt><div class="springDamperParams"><strong>springDamperParams</strong>  (double[]):</div></dt><dd>Spring damper parameters</dd>
<dt><div class="targetForce"><strong>targetForce</strong>  (double):</div></dt><dd>Maximum force to exert</dd>
<dt><div class="targetPos"><strong>targetPos</strong>  (double):</div></dt><dd>Position to reach by controller</dd>
<dt><div class="targetVel"><strong>targetVel</strong>  (double):</div></dt><dd>Velocity to reach by controller</dd>
<dt><div class="vortex.axisFrictionEnabled"><strong>vortex.axisFrictionEnabled</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisFrictionLoss"><strong>vortex.axisFrictionLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisFrictionMaxForce"><strong>vortex.axisFrictionMaxForce</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisFrictionProportional"><strong>vortex.axisFrictionProportional</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisFrictionValue"><strong>vortex.axisFrictionValue</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisLimitsLowerDamping"><strong>vortex.axisLimitsLowerDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisLimitsLowerMaxForce"><strong>vortex.axisLimitsLowerMaxForce</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisLimitsLowerRestitution"><strong>vortex.axisLimitsLowerRestitution</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisLimitsLowerStiffness"><strong>vortex.axisLimitsLowerStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisLimitsUpperDamping"><strong>vortex.axisLimitsUpperDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisLimitsUpperMaxForce"><strong>vortex.axisLimitsUpperMaxForce</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisLimitsUpperRestitution"><strong>vortex.axisLimitsUpperRestitution</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.axisLimitsUpperStiffness"><strong>vortex.axisLimitsUpperStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.frictionEnabledBits"><strong>vortex.frictionEnabledBits</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.frictionProportionalBits"><strong>vortex.frictionProportionalBits</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.posPid"><strong>vortex.posPid</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.relaxationEnabledBits"><strong>vortex.relaxationEnabledBits</strong>  (int):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisOrientFrictionCoeff"><strong>vortex.xAxisOrientFrictionCoeff</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisOrientFrictionLoss"><strong>vortex.xAxisOrientFrictionLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisOrientFrictionMaxTorque"><strong>vortex.xAxisOrientFrictionMaxTorque</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisOrientRelaxationDamping"><strong>vortex.xAxisOrientRelaxationDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisOrientRelaxationLoss"><strong>vortex.xAxisOrientRelaxationLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisOrientRelaxationStiffness"><strong>vortex.xAxisOrientRelaxationStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisPosFrictionCoeff"><strong>vortex.xAxisPosFrictionCoeff</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisPosFrictionLoss"><strong>vortex.xAxisPosFrictionLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisPosFrictionMaxForce"><strong>vortex.xAxisPosFrictionMaxForce</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisPosRelaxationDamping"><strong>vortex.xAxisPosRelaxationDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisPosRelaxationLoss"><strong>vortex.xAxisPosRelaxationLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.xAxisPosRelaxationStiffness"><strong>vortex.xAxisPosRelaxationStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisOrientFrictionCoeff"><strong>vortex.yAxisOrientFrictionCoeff</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisOrientFrictionLoss"><strong>vortex.yAxisOrientFrictionLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisOrientFrictionMaxTorque"><strong>vortex.yAxisOrientFrictionMaxTorque</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisOrientRelaxationDamping"><strong>vortex.yAxisOrientRelaxationDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisOrientRelaxationLoss"><strong>vortex.yAxisOrientRelaxationLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisOrientRelaxationStiffness"><strong>vortex.yAxisOrientRelaxationStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisPosFrictionCoeff"><strong>vortex.yAxisPosFrictionCoeff</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisPosFrictionLoss"><strong>vortex.yAxisPosFrictionLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisPosFrictionMaxForce"><strong>vortex.yAxisPosFrictionMaxForce</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisPosRelaxationDamping"><strong>vortex.yAxisPosRelaxationDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisPosRelaxationLoss"><strong>vortex.yAxisPosRelaxationLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.yAxisPosRelaxationStiffness"><strong>vortex.yAxisPosRelaxationStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisOrientFrictionCoeff"><strong>vortex.zAxisOrientFrictionCoeff</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisOrientFrictionLoss"><strong>vortex.zAxisOrientFrictionLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisOrientFrictionMaxTorque"><strong>vortex.zAxisOrientFrictionMaxTorque</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisOrientRelaxationDamping"><strong>vortex.zAxisOrientRelaxationDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisOrientRelaxationLoss"><strong>vortex.zAxisOrientRelaxationLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisOrientRelaxationStiffness"><strong>vortex.zAxisOrientRelaxationStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisPosFrictionCoeff"><strong>vortex.zAxisPosFrictionCoeff</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisPosFrictionLoss"><strong>vortex.zAxisPosFrictionLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisPosFrictionMaxForce"><strong>vortex.zAxisPosFrictionMaxForce</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisPosRelaxationDamping"><strong>vortex.zAxisPosRelaxationDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisPosRelaxationLoss"><strong>vortex.zAxisPosRelaxationLoss</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="vortex.zAxisPosRelaxationStiffness"><strong>vortex.zAxisPosRelaxationStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="dummy"></a>Dummy properties <span style="font-size: 60%;">(target is a dummy)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="assemblyTag"><strong>assemblyTag</strong>  (string):</div></dt><dd>Assembly tag</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="dummySize"><strong>dummySize</strong>  (double):</div></dt><dd>Dummy size</dd>
<dt><div class="dummyType"><strong>dummyType</strong>  (int):</div></dt><dd>Dummy type</dd>
<dt><div class="engineProperties"><strong>engineProperties</strong>  (string):</div></dt><dd>Engine properties as JSON text</dd>
<dt><div class="linkedDummyHandle"><strong>linkedDummyHandle</strong>  (int):</div></dt><dd>Handle of the linked dummy</dd>
<dt><div class="mujoco.jointProxyHandle"><strong>mujoco.jointProxyHandle</strong>  (int):</div></dt><dd>Handle of the joint proxy (MuJoCo only)</dd>
<dt><div class="mujoco.limitsEnabled"><strong>mujoco.limitsEnabled</strong>  (bool):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.limitsRange"><strong>mujoco.limitsRange</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.limitsSolimp"><strong>mujoco.limitsSolimp</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.limitsSolref"><strong>mujoco.limitsSolref</strong>  (double[]):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.margin"><strong>mujoco.margin</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.springDamping"><strong>mujoco.springDamping</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.springLength"><strong>mujoco.springLength</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
<dt><div class="mujoco.springStiffness"><strong>mujoco.springStiffness</strong>  (double):</div></dt><dd>Refer to engine's documentation</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="light"></a>Light properties <span style="font-size: 60%;">(target is a light)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="attenuationFactors"><strong>attenuationFactors</strong>  (double[]):</div></dt><dd>Attenuation factor</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="enabled"><strong>enabled</strong>  (bool):</div></dt><dd>Enabled</dd>
<dt><div class="lightColor.diffuse"><strong>lightColor.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="lightColor.emission"><strong>lightColor.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="lightColor.specular"><strong>lightColor.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="lightSize"><strong>lightSize</strong>  (double):</div></dt><dd>Light size</dd>
<dt><div class="lightType"><strong>lightType</strong>  (int, not writable):</div></dt><dd>Light type</dd>
<dt><div class="spotCutoffAngle"><strong>spotCutoffAngle</strong>  (double):</div></dt><dd>Spot cut off angle</dd>
<dt><div class="spotExponent"><strong>spotExponent</strong>  (int):</div></dt><dd>Spot exponent</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="camera"></a>Camera properties <span style="font-size: 60%;">(target is a camera)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="cameraSize"><strong>cameraSize</strong>  (double):</div></dt><dd>Camera size</dd>
<dt><div class="clippingPlanes"><strong>clippingPlanes</strong>  (double[]):</div></dt><dd>Near and far clipping planes</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="frustumCornerFar"><strong>frustumCornerFar</strong>  (vector[3], not writable):</div></dt><dd>Far corner of view frustum</dd>
<dt><div class="frustumCornerNear"><strong>frustumCornerNear</strong>  (vector[3], not writable):</div></dt><dd>Near corner of View frustum</dd>
<dt><div class="parentAsManipulationProxy"><strong>parentAsManipulationProxy</strong>  (bool):</div></dt><dd>Use parent as manipulation proxy</dd>
<dt><div class="perspective"><strong>perspective</strong>  (bool, not writable):</div></dt><dd>Perspective projection mode, otherwise orthogonal projection mode</dd>
<dt><div class="resolution"><strong>resolution</strong>  (int[2]):</div></dt><dd>Resolution (relevant only with vision sensors)</dd>
<dt><div class="rotationEnabled"><strong>rotationEnabled</strong>  (bool):</div></dt><dd>Rotation enabled</dd>
<dt><div class="showFrustum"><strong>showFrustum</strong>  (bool):</div></dt><dd>Show view frustum</dd>
<dt><div class="trackedObjectHandle"><strong>trackedObjectHandle</strong>  (int):</div></dt><dd>Tracked scene object handle</dd>
<dt><div class="translationEnabled"><strong>translationEnabled</strong>  (bool):</div></dt><dd>Translation enabled</dd>
<dt><div class="viewAngle"><strong>viewAngle</strong>  (double):</div></dt><dd>View angle (in perspective projection mode)</dd>
<dt><div class="viewSize"><strong>viewSize</strong>  (double):</div></dt><dd>View size (in orthogonal projection mode)</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="visionSensor"></a>Vision sensor properties <span style="font-size: 60%;">(target is a vision sensor)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="backgroundColor"><strong>backgroundColor</strong>  (color (float[3])):</div></dt><dd>Background color</dd>
<dt><div class="backgroundColorFromEnvironment"><strong>backgroundColorFromEnvironment</strong>  (bool):</div></dt><dd>Background color from environment</dd>
<dt><div class="clippingPlanes"><strong>clippingPlanes</strong>  (double[]):</div></dt><dd>Near and far clipping planes</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="depthBuffer"><strong>depthBuffer</strong>  (double[], not writable):</div></dt><dd>Depth buffer</dd>
<dt><div class="emitDepthChangedEvent"><strong>emitDepthChangedEvent</strong>  (bool):</div></dt><dd>Emit depth change event</dd>
<dt><div class="emitImageChangedEvent"><strong>emitImageChangedEvent</strong>  (bool):</div></dt><dd>Emit image change event</dd>
<dt><div class="explicitHandling"><strong>explicitHandling</strong>  (bool):</div></dt><dd>Explicit handling</dd>
<dt><div class="frustumCornerFar"><strong>frustumCornerFar</strong>  (vector[3], not writable):</div></dt><dd>Far corner of view frustum</dd>
<dt><div class="frustumCornerNear"><strong>frustumCornerNear</strong>  (vector[3], not writable):</div></dt><dd>Near corner of View frustum</dd>
<dt><div class="ignoreDepthInfo"><strong>ignoreDepthInfo</strong>  (bool):</div></dt><dd>Ignore Depth buffer (faster)</dd>
<dt><div class="ignoreImageInfo"><strong>ignoreImageInfo</strong>  (bool):</div></dt><dd>Ignore RGB buffer (faster)</dd>
<dt><div class="imageBuffer"><strong>imageBuffer</strong>  (<a href="buffers.htm">buffer</a>):</div></dt><dd>RGB buffer</dd>
<dt><div class="omitPacket1"><strong>omitPacket1</strong>  (bool):</div></dt><dd>Omit packet 1 (faster)</dd>
<dt><div class="perspective"><strong>perspective</strong>  (bool, not writable):</div></dt><dd>Perspective projection mode, otherwise orthogonal projection mode</dd>
<dt><div class="renderMode"><strong>renderMode</strong>  (int):</div></dt><dd>Render mode</dd>
<dt><div class="resolution"><strong>resolution</strong>  (int[2]):</div></dt><dd>Resolution (relevant only with vision sensors)</dd>
<dt><div class="sensorSize"><strong>sensorSize</strong>  (double):</div></dt><dd>Sensor size</dd>
<dt><div class="showFrustum"><strong>showFrustum</strong>  (bool):</div></dt><dd>Show view frustum</dd>
<dt><div class="useExtImage"><strong>useExtImage</strong>  (bool):</div></dt><dd>External input</dd>
<dt><div class="viewAngle"><strong>viewAngle</strong>  (double):</div></dt><dd>View angle (in perspective projection mode)</dd>
<dt><div class="viewSize"><strong>viewSize</strong>  (double):</div></dt><dd>View size (in orthogonal projection mode)</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="proximitySensor"></a>Proximity sensor properties <span style="font-size: 60%;">(target is a proximity sensor)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="angleThreshold"><strong>angleThreshold</strong>  (double):</div></dt><dd>Angle threshold, 0.0 to disable</dd>
<dt><div class="backFaceDetection"><strong>backFaceDetection</strong>  (bool):</div></dt><dd>Back face detection</dd>
<dt><div class="closeThreshold"><strong>closeThreshold</strong>  (double):</div></dt><dd>Close threshold: if a detection occures below that threshold, it is not registered. 0.0 to disable</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="detectedNormal"><strong>detectedNormal</strong>  (vector[3], not writable):</div></dt><dd>Detected normal vector</dd>
<dt><div class="detectedObjectHandle"><strong>detectedObjectHandle</strong>  (int, not writable):</div></dt><dd>Detected scene object handle</dd>
<dt><div class="detectedPoint"><strong>detectedPoint</strong>  (vector[3], not writable):</div></dt><dd>Detected point</dd>
<dt><div class="exactMode"><strong>exactMode</strong>  (bool):</div></dt><dd>Exact mode</dd>
<dt><div class="explicitHandling"><strong>explicitHandling</strong>  (bool):</div></dt><dd>Explicit handling</dd>
<dt><div class="frontFaceDetection"><strong>frontFaceDetection</strong>  (bool):</div></dt><dd>Front face detection</dd>
<dt><div class="randomizedDetection"><strong>randomizedDetection</strong>  (bool, not writable):</div></dt><dd>Randomized detection</dd>
<dt><div class="rayColor.diffuse"><strong>rayColor.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="rayColor.emission"><strong>rayColor.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="rayColor.specular"><strong>rayColor.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="sensorPointSize"><strong>sensorPointSize</strong>  (double):</div></dt><dd>Sensor point size</dd>
<dt><div class="sensorType"><strong>sensorType</strong>  (int, not writable):</div></dt><dd>Sensor type</dd>
<dt><div class="showVolume"><strong>showVolume</strong>  (bool):</div></dt><dd>Show volume</dd>
<dt><div class="volume_angle"><strong>volume_angle</strong>  (double[]):</div></dt><dd>Angle and inside gap for disk- and cone-type volumes</dd>
<dt><div class="volume_closeEdges"><strong>volume_closeEdges</strong>  (double[], not writable):</div></dt><dd>List of segments (defined by pairs of end-point coordinates) visualizing the close threshold of the volume</dd>
<dt><div class="volume_edges"><strong>volume_edges</strong>  (double[], not writable):</div></dt><dd>List of segments (defined by pairs of end-point coordinates) visualizing the volume</dd>
<dt><div class="volume_faces"><strong>volume_faces</strong>  (int[]):</div></dt><dd>Number of faces (near and far) for cylinder-, disk- and pyramid-type volumes</dd>
<dt><div class="volume_offset"><strong>volume_offset</strong>  (double):</div></dt><dd>Offset of detection volume</dd>
<dt><div class="volume_radius"><strong>volume_radius</strong>  (double[]):</div></dt><dd>Radius for cylinder-, disk- and cone-type volumes</dd>
<dt><div class="volume_range"><strong>volume_range</strong>  (double):</div></dt><dd>Range/depth of detection volume</dd>
<dt><div class="volume_subdivisions"><strong>volume_subdivisions</strong>  (int[]):</div></dt><dd>Number of subdivisions (near and far) for cone-type volumes</dd>
<dt><div class="volume_xSize"><strong>volume_xSize</strong>  (double[]):</div></dt><dd>X-size (near and far) for pyramid-type volumes</dd>
<dt><div class="volume_ySize"><strong>volume_ySize</strong>  (double[]):</div></dt><dd>Y-size (near and far) for pyramid-type volumes</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="forceSensor"></a>Force sensor properties <span style="font-size: 60%;">(target is a force sensor)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="consecutiveViolationsToTrigger"><strong>consecutiveViolationsToTrigger</strong>  (int):</div></dt><dd>Consecutive violations to trigger</dd>
<dt><div class="filterSampleSize"><strong>filterSampleSize</strong>  (int):</div></dt><dd>Filter sample size</dd>
<dt><div class="filterSensorForce"><strong>filterSensorForce</strong>  (vector[3], not writable):</div></dt><dd>Filtered force vector</dd>
<dt><div class="filterSensorTorque"><strong>filterSensorTorque</strong>  (vector[3], not writable):</div></dt><dd>Filtered torque vector</dd>
<dt><div class="filterType"><strong>filterType</strong>  (int):</div></dt><dd>Filter type</dd>
<dt><div class="forceThreshold"><strong>forceThreshold</strong>  (double):</div></dt><dd>Force threshold</dd>
<dt><div class="forceThresholdEnabled"><strong>forceThresholdEnabled</strong>  (bool):</div></dt><dd>Force threshold enabled</dd>
<dt><div class="intrinsicError"><strong>intrinsicError</strong>  (<a href="positionOrientationTransformation.htm#pose">pose</a>, not writable):</div></dt><dd>Intrinsic error, generated by some physics engines</dd>
<dt><div class="sensorForce"><strong>sensorForce</strong>  (vector[3], not writable):</div></dt><dd>Measured force vector</dd>
<dt><div class="sensorSize"><strong>sensorSize</strong>  (double):</div></dt><dd>Sensor size</dd>
<dt><div class="sensorTorque"><strong>sensorTorque</strong>  (vector[3], not writable):</div></dt><dd>Measured torque vector</dd>
<dt><div class="torqueThreshold"><strong>torqueThreshold</strong>  (double):</div></dt><dd>Torque threshold</dd>
<dt><div class="torqueThresholdEnabled"><strong>torqueThresholdEnabled</strong>  (bool):</div></dt><dd>Torque threshold enabled</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="graph"></a>Graph properties <span style="font-size: 60%;">(target is a graph)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="backgroundColor"><strong>backgroundColor</strong>  (color (float[3])):</div></dt><dd>Background color</dd>
<dt><div class="bufferSize"><strong>bufferSize</strong>  (int):</div></dt><dd>Buffer size</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="cyclic"><strong>cyclic</strong>  (bool):</div></dt><dd>Buffer is cyclic</dd>
<dt><div class="foregroundColor"><strong>foregroundColor</strong>  (color (float[3])):</div></dt><dd>Foreground color</dd>
<dt><div class="graphSize"><strong>graphSize</strong>  (double):</div></dt><dd>Size of the 3D graph representation</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="pointCloud"></a>Point cloud properties <span style="font-size: 60%;">(target is a point cloud)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="cellSize"><strong>cellSize</strong>  (double):</div></dt><dd>Size of the oc-tree cell/voxel</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="colors"><strong>colors</strong>  (<a href="buffers.htm">buffer</a>, not writable):</div></dt><dd>Point colors</dd>
<dt><div class="maxPointsInCell"><strong>maxPointsInCell</strong>  (int):</div></dt><dd>Maximum number of points in an oc-tree cell/voxel</dd>
<dt><div class="ocTreeStruct"><strong>ocTreeStruct</strong>  (bool):</div></dt><dd>Use an oc-tree structure</dd>
<dt><div class="pointDisplayFraction"><strong>pointDisplayFraction</strong>  (double):</div></dt><dd>Fraction of points to be displayed in an oc-tree cell/voxel</dd>
<dt><div class="pointSize"><strong>pointSize</strong>  (int):</div></dt><dd>Point size</dd>
<dt><div class="points"><strong>points</strong>  (double[], not writable):</div></dt><dd>Point positions</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="ocTree"></a>OC-Tree properties <span style="font-size: 60%;">(target is an OC-Tree)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="colors"><strong>colors</strong>  (<a href="buffers.htm">buffer</a>, not writable):</div></dt><dd>Voxel Colors</dd>
<dt><div class="voxelSize"><strong>voxelSize</strong>  (double):</div></dt><dd>Voxel size</dd>
<dt><div class="voxels"><strong>voxels</strong>  (double[], not writable):</div></dt><dd>Voxel positions</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="script"></a>Script properties <span style="font-size: 60%;">(target is a script)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="addOnMenuPath"><strong>addOnMenuPath</strong>  (string, not writable):</div></dt><dd>Menu path of add-on</dd>
<dt><div class="addOnPath"><strong>addOnPath</strong>  (string, not writable):</div></dt><dd>Path of add-on</dd>
<dt><div class="code"><strong>code</strong>  (string):</div></dt><dd>Script content</dd>
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="execPriority"><strong>execPriority</strong>  (int):</div></dt><dd>Execution priority</dd>
<dt><div class="executionDepth"><strong>executionDepth</strong>  (int, not writable):</div></dt><dd>Execution depth</dd>
<dt><div class="language"><strong>language</strong>  (string, not writable):</div></dt><dd>Language</dd>
<dt><div class="restartOnError"><strong>restartOnError</strong>  (bool):</div></dt><dd>Restart on error</dd>
<dt><div class="scriptDisabled"><strong>scriptDisabled</strong>  (bool):</div></dt><dd>Script is enabled</dd>
<dt><div class="scriptName"><strong>scriptName</strong>  (string, not writable):</div></dt><dd>Script name</dd>
<dt><div class="scriptSize"><strong>scriptSize</strong>  (double):</div></dt><dd>Size of the script's 3D representation</dd>
<dt><div class="scriptState"><strong>scriptState</strong>  (int, not writable):</div></dt><dd>Script state</dd>
<dt><div class="scriptType"><strong>scriptType</strong>  (int, not writable):</div></dt><dd>Script type</dd>
</dl></div>
</div>


<div class="constantsGroup">
<h2><a name="mesh"></a>Mesh properties <span style="font-size: 60%;">(target is a mesh, i.e. shape item)</span></h2>
<div class="constList">
<dl class="grid-list">
<dt><div class="color.diffuse"><strong>color.diffuse</strong>  (color (float[3])):</div></dt><dd>Diffuse color</dd>
<dt><div class="color.emission"><strong>color.emission</strong>  (color (float[3])):</div></dt><dd>Emission color</dd>
<dt><div class="color.specular"><strong>color.specular</strong>  (color (float[3])):</div></dt><dd>Specular color</dd>
<dt><div class="color.transparency"><strong>color.transparency</strong>  (double):</div></dt><dd>Transparency</dd>
<dt><div class="colorName"><strong>colorName</strong>  (string):</div></dt><dd>Color name</dd>
<dt><div class="convex"><strong>convex</strong>  (bool, not writable):</div></dt><dd>Whether mesh is convex or not</dd>
<dt><div class="culling"><strong>culling</strong>  (bool):</div></dt><dd>Backface culling</dd>
<dt><div class="indices"><strong>indices</strong>  (int[], not writable):</div></dt><dd>Indices (3 values per triangle)</dd>
<dt><div class="normals"><strong>normals</strong>  (double[], not writable):</div></dt><dd>Normals (3*3 values per triangle)</dd>
<dt><div class="objectType"><strong>objectType</strong>  (string, not writable):</div></dt><dd>Object type</dd>
<dt><div class="rawTexture"><strong>rawTexture</strong>  (<a href="buffers.htm">buffer</a>, not writable):</div></dt><dd>Texture</dd>
<dt><div class="shadingAngle"><strong>shadingAngle</strong>  (double):</div></dt><dd>Shading angle</dd>
<dt><div class="shapeUid"><strong>shapeUid</strong>  (int, not writable):</div></dt><dd>Unique identifier of parent shape</dd>
<dt><div class="showEdges"><strong>showEdges</strong>  (bool):</div></dt><dd>Visible edges</dd>
<dt><div class="textureApplyMode"><strong>textureApplyMode</strong>  (int):</div></dt><dd>Texture apply mode</dd>
<dt><div class="textureCoordinates"><strong>textureCoordinates</strong>  (double[], not writable):</div></dt><dd>Texture coordinates</dd>
<dt><div class="textureID"><strong>textureID</strong>  (int, not writable):</div></dt><dd>Texture ID</dd>
<dt><div class="textureInterpolate"><strong>textureInterpolate</strong>  (bool):</div></dt><dd>Interpolate texture</dd>
<dt><div class="textureRepeatU"><strong>textureRepeatU</strong>  (bool):</div></dt><dd>Texture repeat U</dd>
<dt><div class="textureRepeatV"><strong>textureRepeatV</strong>  (bool):</div></dt><dd>Texture repeat V</dd>
<dt><div class="textureResolution"><strong>textureResolution</strong>  (int[2], not writable):</div></dt><dd>Texture resolution</dd>
<dt><div class="vertices"><strong>vertices</strong>  (double[], not writable):</div></dt><dd>Vertices</dd>
</dl></div>
</div>




<br>
<br>
 </tr>
</table> 
</div>  
</body>
</html>
