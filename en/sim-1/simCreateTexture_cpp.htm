<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simCreateTexture <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>simCreateTexture <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></h2>
    <p>Creates a planar shape, that will be textured with a new, or imported texture</p>
</div>

<div class="regApiSection">
    <h3>C++ synopsis</h3>
    <code class="hljs language-c++ coppelia-coppeliasim-plugin">int simCreateTexture(const char* fileName, int options, const double* planeSizes, 
                     const double* scalingUV, const double* xy_g, int fixedResolution, 
                     int* textureId, int* resolution, const void* reserved)</code>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>fileName</strong>: filename of the texure to import, or an empty string if you wish to create a new texture.</li>
                <li><strong>options</strong>: bit-coded:
                    <ul>
                        <li><strong>bit0</strong> set (1): do not interpolate adjacent color patches.</li>
                        <li><strong>bit1</strong> set (2): apply the texture in decal-mode.</li>
                        <li><strong>bit2</strong> set (4): repeat the texture along the U direction.</li>
                        <li><strong>bit3</strong> set (8): repeat the texture along the V direction.</li>
                    </ul>
                </li>
                <li><strong>planeSizes</strong>: a pointer to 2 values: the dimensions of the planar shape that will be generated. Can be nullptr for default dimensions.</li>
                <li><strong>scalingUV</strong>: a pointer to 2 values: the desired scaling of the texture, along the U and V directions. Can be nullptr for default scalings.</li>
                <li><strong>xy_g</strong>: a pointer to 3 values: the texture x/y shift, and the texture gamma-rotation. Can be nullptr for default shift/rotation values.</li>
                <li><strong>fixedResolution</strong>: 0 to import the shape with its original resolution. Otherwise, specify a power of 2 value which will be the maximum texture resolution (the texture will also be applied a power of 2 resolution).</li>
                <li><strong>resolution</strong>: a pointer to 2 values representing the desired texture resolution when creating a new texture. The same pointer is used to return the effective resolution of the created/imported texture.</li>
                <li><strong>textureId</strong>: a pointer to an integer that will be used to return the new texture ID. If a same texture is already present, the old texture ID will be returned. Can be nullptr.</li>
                <li><strong>reserved</strong>: reserved. Set to nullptr.</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return</h3>
    
            <ul>
                <li>-1 in case of an error, otherwise the object handle of the created planar shape.</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="simGetTextureId_cpp.htm">simGetTextureId</a></li>
<li><a href="simReadTexture_cpp.htm">simReadTexture</a></li>
<li><a href="simWriteTexture_cpp.htm">simWriteTexture</a></li>
<li><a href="simSetShapeTexture_cpp.htm">simSetShapeTexture</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
