<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simCheckOctreePointOccupancy <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>simCheckOctreePointOccupancy <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></h2>
    <p>Checks whether the provided points collide with the <a href="../octrees.htm">OC tree</a> voxels</p>
</div>

<div class="regApiSection">
    <h3>C++ synopsis</h3>
    <code class="hljs language-c++ coppelia-coppeliasim-plugin">int checkOctreePointOccupancy(int octreeHandle, int options, const double* pts, int ptCnt, 
                              unsigned int* tag, unsigned long long int* location, void* reserved)</code>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>octreeHandle</strong>: handle of the OC tree</li>
                <li><strong>options</strong>: bit-coded:
                    <ul>
                        <li>bit0 set (1): specified points are relative to the OC tree reference frame, otherwise they are relative to the world reference frame</li>
                    </ul>
                </li>
                <li><strong>pts</strong>: pointer to the points specified as x/y/z coordinates</li>
                <li><strong>ptCnt</strong>: number of points contained in pts</li>
                <li><strong>tag</strong>: pointer to a tag value, receiving the tag value of the voxel that collides with a single point. If several points are tested, then this pointer is ignored. Can be nullptr.</li>
                <li><strong>location</strong>: pointer to a uint64 value, which specifies the location of the voxel that collides with a single point. If several points are tested, then this pointer is ignored. Can be nullptr. The location value is coded in following way:
                    <ul>
                        <li>bit0 - bit5: the depth level of the voxel in the OC tree structure (1-63).</li>
                        <li>bit6 - bit63: a triple bit-value for each depth level. triple bit-values represent the node location relative to the parent node:
                            <ul>
                                <li>0: (-1,-1,-1)</li>
                                <li>1: (+1,-1,-1)</li>
                                <li>2: (-1,+1,-1)</li>
                                <li>3: (+1,+1,-1)</li>
                                <li>4: (-1,-1,+1)</li>
                                <li>5: (+1,-1,+1)</li>
                                <li>6: (-1,+1,+1)</li>
                                <li>7: (+1,+1,+1)</li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li><strong>reserved</strong>: reserved for future extensions. Set to nullptr</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return</h3>
    
            <ul>
                <li>-1 if operation was not successful, 0 if the points do not collide with the voxels, 1 if the points collide with the voxels</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="../apiFunctions.htm#octree">OC tree related functions</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
