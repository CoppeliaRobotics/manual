<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>sim.setShapeTexture <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>sim.setShapeTexture <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></h2>
    <p>Applies/removes a texture to/from a shape</p>
</div>

<div class="regApiSection">
    <h3>Synopsis</h3>
    <div class="multi-language-switcher">
    	<code class="hljs language-python coppelia-coppeliasim-script">sim.setShapeTexture(int shapeHandle, int textureId, int mappingMode, int options, list uvScaling, 
                    list position = None, list orientation = None)</code>
        
        <code class="hljs language-lua coppelia-coppeliasim-script">sim.setShapeTexture(int shapeHandle, int textureId, int mappingMode, int options, float[2] uvScaling, 
                    float[3] position = nil, float[3] orientation = nil)</code>
    </div>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>shapeHandle</strong>: handle of the shape.</li>
                <li><strong>textureId</strong>: ID of the texture or -1 to remove any existing texture. See also <a href="simGetTextureId.htm">sim.getTextureId</a>, <a href="simGetShapeTextureId.htm">sim.getShapeTextureId</a> and <a href="simCreateTexture.htm">sim.createTexture</a></li>
                <li><strong>mappingMode</strong>: <a href="../apiConstants.htm#textureMappingModes">texture mapping mode</a>.</li>
                <li><strong>options</strong>: bit-coded:
                    <ul>
                        <li>bit0: if set (1), then adjacent texture pixels are not interpolated.</li>
                        <li>bit1: if set (2), then the texture is applied as a decal (its appearance won't be influenced by light conditions).</li>
                        <li>bit2: if set (4), then the texture will be repeated along the U direction.</li>
                        <li>bit3: if set (8), then the texture will be repeated along the V direction.</li>
                    </ul>
                </li>
                <li><strong>uvScaling</strong>: array of 2 values indicating the texture scaling factors along the U and V directions</li>
                <li><strong>position</strong>: array of 3 values x/y/z indicating the texture position on the shape. Can be None/nil for default values</li>
                <li><strong>orientation</strong>: array of 3 values (Euler angles) indicating the texture orientation on the shape. Can be None/nil for default values</li>
            </ul>
        
</div>

<div style="display: none;" class="regApiSection">
    <h3>Return values</h3>
    
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="simGetTextureId.htm">sim.getTextureId</a></li>
<li><a href="simGetShapeTextureId.htm">sim.getShapeTextureId</a></li>
<li><a href="simCreateTexture.htm">sim.createTexture</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
