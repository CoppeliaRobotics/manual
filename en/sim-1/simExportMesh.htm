<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>sim.exportMesh <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>sim.exportMesh <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></h2>
    <p>Exports a mesh to a file</p>
</div>

<div class="regApiSection">
    <h3>Synopsis</h3>
    <div class="multi-language-switcher">
    	<code class="hljs language-python coppelia-coppeliasim-script">sim.exportMesh(int fileformat, string pathAndFilename, int options, float scalingFactor, 
               list vertices, list indices)</code>
        
        <code class="hljs language-lua coppelia-coppeliasim-script">sim.exportMesh(int fileformat, string pathAndFilename, int options, float scalingFactor, 
               float[] vertices, int[] indices)</code>
    </div>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>fileformat</strong>: the fileformat to export to:
                    <ul>
                        <li>0: OBJ format</li>
                        <li>3: TEXT STL format</li>
                        <li>4: BINARY STL format</li>
                        <li>5: COLLADA format</li>
                        <li>6: TEXT PLY format</li>
                        <li>7: BINARY PLY format</li>
                    </ul>
                </li>
                <li><strong>pathAndFilename</strong>: the location of the file to create.</li>
                <li><strong>options</strong>: keep at 0</li>
                <li><strong>scalingFactor</strong>: the scaling factor to apply to the vertices to export</li>
                <li><strong>vertices</strong>: an array of vertice arrays. See the example below</li>
                <li><strong>indices</strong>: an array of indice arrays. See the example below</li>
            </ul>
        
</div>

<div style="display: none;" class="regApiSection">
    <h3>Return values</h3>
    
</div>

<div class="regApiSection">

            <h3>Example</h3>
            <code class="hljs language-lua coppelia-coppeliasim-script">--lua

-- Exports all shapes in the scene
local allVertices = {}
local allIndices = {}
local shapeIndex = 0
while true do
    local h = sim.getObjects(shapeIndex, sim.sceneobject_shape)
    if h &lt; 0 then
        break
    end
    shapeIndex = shapeIndex + 1
    local vertices, indices = sim.getShapeMesh(h)
    local m = sim.getObjectMatrix(h)
    for i = 1, #vertices // 3, 1 do
        local v = {vertices[3 * (i - 1) +1], vertices[3 * (i - 1) + 2], vertices[3 * (i - 1) + 3]}
        v = sim.multiplyVector(m, v)
        vertices[3 * (i - 1) + 1] = v[1]
        vertices[3 * (i - 1) + 2] = v[2]
        vertices[3 * (i - 1) + 3] = v[3]
    end
    table.insert(allVertices, vertices)
    table.insert(allIndices, indices)
end

if #allVertices &gt; 0 then
    sim.exportMesh(0, "d:\\example.obj", 0, 1, allVertices, allIndices)
end</code>
        
</div>

<p><br>See also:
<ul>
<li><a href="simImportMesh.htm">sim.importMesh</a></li>
<li><a href="simGetShapeMesh.htm">sim.getShapeMesh</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
