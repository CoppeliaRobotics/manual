<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simCreateShape <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>simCreateShape <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></h2>
    <p>Creates a mesh shape</p>
</div>

<div class="regApiSection">
    <h3>C++ synopsis</h3>
    <code class="hljs language-c++ coppelia-coppeliasim-plugin">int simCreateShape(int options, double shadingAngle, const double* vertices, int verticesSize, 
                   const int* indices, int indicesSize, const double* normals, 
                   const double* textureCoordinates, const unsigned char* texture, 
                   const int* textureResolution)</code>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>options</strong>: Bit-coded:
                    <ul>
                        <li>if bit0 is set (1), backfaces are culled</li>
                        <li>If bit1 is set (2), edges are visible</li>
                        <li>If bit2 is set (4), adjacent texture pixels are not interpolated</li>
                        <li>If bit3 is set (8), texture is applied as a decal</li>
                        <li>If bit4 is set (16), texture is RGBA, otherwise it is RGB</li>
                        <li>If bit5 is set (32), texture is horizontally flipped</li>
                        <li>If bit6 is set (64), texture is vertically flipped</li>
                    </ul>
                </li>
                <li><strong>shadingAngle</strong>: shading angle</li>
                <li><strong>vertices</strong>: array of vertices</li>
                <li><strong>verticesSize</strong>: size of the vertice array</li>
                <li><strong>indices</strong>: array of indices</li>
                <li><strong>indicesSize</strong>: size of the indice array</li>
                <li><strong>normals</strong>: optional array of normal vectors. Has to be 3*indicesSize in length</li>
                <li><strong>textureCoordinates</strong>: optional array of texture coordinates. Has to be 2*indicesSize in length</li>
                <li><strong>texture</strong>: optional texture, specified as RGB or RGBA</li>
                <li><strong>textureResolution</strong>: resolution of the specified texture</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return</h3>
    
            <ul>
                <li>-1 if operation was not successful, otherwise the handle of the newly created shape</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="simCreatePrimitiveShape_cpp.htm">simCreatePrimitiveShape</a></li>
<li><a href="simCreateHeightfieldShape_cpp.htm">simCreateHeightfieldShape</a></li>
<li><a href="simGetShapeMesh_cpp.htm">simGetShapeMesh</a></li>
<li><a href="simImportMesh_cpp.htm">simImportMesh</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
