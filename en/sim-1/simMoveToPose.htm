<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>sim.moveToPose <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>sim.moveToPose <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></h2>
    <p>Executes an object motion using the <a href="https://github.com/pantor/ruckig#readme">Ruckig online trajectory generator</a>, by performing interpolations between two poses. The function can operate by handling 4 motion variables (x,y,z and
angle between the two poses), or a single movement variable (t, which requires a metric to be specified for distance
calculation between the two poses). This function can only be called from a script running in a thread, since this is a blocking
operation</p>
</div>

<div class="regApiSection">
    <h3>Synopsis</h3>
    <div class="multi-language-switcher">
    	<code class="hljs language-python coppelia-coppeliasim-script">dict data = sim.moveToPose(dict params)</code>
        
        <code class="hljs language-lua coppelia-coppeliasim-script">table data = sim.moveToPose(table params)</code>
    </div>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>params</strong>: parameters of the function:
                    <ul>
                        <li><strong>pose</strong>: mandatory if neither object nor ik are specified. Specifies current pose</li>
                        <li><strong>object</strong>: mandatory if neither pose nor ik are specified. Specifies the handle of the object to move</li>
                        <li><strong>ik</strong>: mandatory if neither pose nor object are specified. Contains IK-relevant informations, if a kinematic chain should move via IK to a target:
							<ul>
		                        <li><strong>tip</strong>: specifies the handle of the tip object (on the end-effector)</li>
		                        <li><strong>target</strong>: specifies the handle of the target object (the object to reach)</li>
		                        <li><strong>base</strong>: optional. Specifies the handle of the base object (the base of the kinematic chain). Defaults to -1</li>
		                        <li><strong>joints</strong>: optional. Specifies the handles of the joints involved in IK calculations. Defaults to all joints within tip and base</li>
		                        <li><strong>method</strong>: optional. Specifies the resolution method. Defaults to simIK.method_damped_least_squares</li>
		                        <li><strong>damping</strong>: optional. Specifies the resolution damping. Defaults to 0.02</li>
		                        <li><strong>iterations</strong>: optional. Specifies the max. number of iterations. Defaults to 20</li>
		                        <li><strong>constraints</strong>: optional. Specifies the constraints. Defaults to simIK.constraint_pose</li>
		                        <li><strong>precision</strong>: optional. Specifies the desired precision. Defaults to [0.001, 0.5 * math.pi / 180.0]</li>
		                        <li><strong>allowError</strong>: optional. Specifies whether a resolution with precision values over what is allowed will be applied anyway. Defaults to params.ik.allowError</li>
								<li><strong>breakFlags</strong>: optional. Specified the reasons-flags required for simIK.handleGroup to fail Defaults to 0</li> 
								
							</ul>
						</li>
                        <li><strong>targetPose</strong>: specifies the target pose</li>
                        <li><strong>targetVel</strong>: optional. Specifies the target velocity. Defaults to [0, ...] if omitted</li>
                        <li><strong>flags</strong>: optional. <a href="../apiConstants.htm#ruckigFunctions">Ruckig flags</a>, -1 for default flags.</li>
                        <li><strong>metric</strong>: optional. A metric to compute a pose-pose distance. If omitted, the motion calculation happens in the 4-dimensional space (dim = 4: x, y, z, angle), otherwise it happens in the 1-dimensional space (dim = 1: t)</li>
                        <li><strong>maxVel</strong>: optional. Specifies the maximum allowed velocity as a vector with one value per dim, or as a scalar (scaled to a dim-vector). Defaults to [inf, ...] if omitted</li>
                        <li><strong>minVel</strong>: optional. Specifies the minimum allowed velocity as a vector with one value per dim, or as a scalar (scaled to a dim-vector). Defaults to -maxVel if omitted</li>
                        <li><strong>maxAccel</strong>: optional. Specifies the maximum allowed acceleration as a vector with one value per dim, or as a scalar (scaled to a dim-vector). Defaults to [inf, ...] if omitted</li>
                        <li><strong>minAccel</strong>: optional. Specifies the minimum allowed acceleration as a vector with one value per dim, or as a scalar (scaled to a dim-vector). Defaults to -maxAccel if omitted</li>
                        <li><strong>maxJerk</strong>: optional. Specifies the maximum allowed jerk as a vector with one value per dim, or as a scalar (scaled to a dim-vector). Defaults to [inf, ...] if omitted</li>
                        <li><strong>callback</strong>: optional. Callback function called for each motion step. The argument provided to the callback function is the current motion state</li>
                        <li><strong>auxData</strong>: optional. Data to be forwarded to the callback function</li>
                        <li><strong>timeStep</strong>: optional. The desired time step size. A value of 0 indicates that the current simulation time step is used. Defaults to 0 if omitted</li>
                    </ul>
                </li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return values</h3>
    
            <ul>
                <li><strong>data</strong>: current motion state</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="simMoveToPose_init.htm">sim.moveToPose_init</a></li>
<li><a href="simMoveToPose_step.htm">sim.moveToPose_step</a></li>
<li><a href="simMoveToPose_cleanup.htm">sim.moveToPose_cleanup</a></li>
<li><a href="simMoveToConfig.htm">sim.moveToConfig</a></li>
<li><a href="simRuckigPos.htm">sim.ruckigPos</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
