<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simGetJointForce <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>simGetJointForce <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></h2>
    <p>Retrieves the force or torque applied to a joint along/about its active axis.
This function retrieves meaningful information only if the joint is prismatic or revolute,
and is dynamically enabled. With the Bullet, MuJoCo and Newton engine, this function returns
the force or torque applied to the joint motor  (torques from joint limits are not taken into account).
With the ODE and Vortex engine, this function returns the total force or torque applied to a joint
along/about its z-axis</p>
</div>

<div class="regApiSection">
    <h3>C++ synopsis</h3>
    <code class="hljs language-c++ coppelia-coppeliasim-plugin">int simGetJointForce(int jointHandle, double* forceOrTorque)</code>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>jointHandle</strong>: handle of the joint. Can be combined with <a href="../apiConstants.htm#specialHandleFlags">sim.handleflag_rawvalue</a> (simply add sim.handleflag_rawvalue to jointHandle), if you wish to access the raw values generated by each individual dynamic simulation step (by default, there are 10 dynamic simulation steps for each simulation step). Raw values can only be accessed from inside a <a href="../callbackFunctions.htm">callback function</a> triggered by the physics engine.</li>
                <li><strong>forceOrTorque</strong>: the force or the torque applied to the joint along/about its z-axis.</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return</h3>
    
            <ul>
                <li>-1 if operation was not successful. 0 if no value is available yet (e.g. when <a href="simHandleDynamics.htm">simHandleDynamics</a> hasn't yet handled that joint), otherwise a value &gt;0.</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="simSetJointTargetForce_cpp.htm">simSetJointTargetForce</a></li>
<li><a href="simReadForceSensor_cpp.htm">simReadForceSensor</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
