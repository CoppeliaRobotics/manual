<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simRuckigStep <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>simRuckigStep <small>(in <a href="../apisOverview.htm">sim-1</a>)</small></h2>
    <p>Executes a call to the <a href="https://github.com/pantor/ruckig#readme">Ruckig online trajectory generator</a>.
The Ruckig online trajectory generator provides instantaneous trajectory generation capabilities for
motion control systems. This function steps forward a trajectory generation algorithm previously prepared
via <a href="simRuckigPos.htm">sim.ruckigPos</a> or <a href="simRuckigVel.htm">sim.ruckigVel</a>
        </p>
</div>

<div class="regApiSection">
    <h3>C++ synopsis</h3>
    <code class="hljs language-c++ coppelia-coppeliasim-plugin">int simRuckigStep(int handle, double cycleTime, double* newPos, double* newVel, double* newAccel, 
                  double* syncTime, double* reserved1, int* reserved2)</code>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>handle</strong>: handle of the object created via <a href="simRuckigPos.htm">simRuckigPos</a> or <a href="simRuckigVel.htm">simRuckigVel</a>.</li>
                <li><strong>cycleTime</strong>: cycle time or simulation step. Should always be a multiple of the base cycle time</li>
                <li><strong>newPos</strong>: new position</li>
                <li><strong>newVel</strong>: new velocity</li>
                <li><strong>newAccel</strong>: new acceleration</li>
                <li><strong>syncTime</strong>: synchronization time (output). This is the time needed to reach the desired state. This time does not include the cycle time of the current call to sim.RuckigStep)</li>
                <li><strong>reserved1</strong>: reserved. Set to nullptr</li>
                <li><strong>reserved2</strong>: reserved. Set to nullptr</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return</h3>
    
            <ul>
                <li>-1 or -2 in case of an immediate error, otherwise the return value of the update function in the motion library:
                    <ul>
                        <li>1: Finished (final state reached)</li>
                        <li>0: Working (final state not yet reached)</li>
                        <li>-100: ErrorInvalidInput</li>
                        <li>-101: ErrorTrajectoryDuration</li>
                        <li>-110: ErrorExecutionTimeCalculation</li>
                        <li>-111: ErrorSynchronizationCalculation</li>
                    </ul>
                </li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p></p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
