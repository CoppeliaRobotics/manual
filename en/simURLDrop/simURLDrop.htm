<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN"><html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en-us">
<title>simURLDrop Plugin API reference</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
<script type="text/javascript">
//
function getParameterByName(name, url = window.location.href)
{
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if(!results) return null;
    if(!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}
//
                </script><style type="text/css">
td.section { margin: 0; padding: 0; }
table { margin-left: 3em; margin-right: 3em; }
                </style>
</head>
<body>
<div align="center"><table class="allEncompassingTable">
<tr><td id="title" class="section"><h1>simURLDrop Plugin API reference</h1></td></tr>
<tr><td id="info" class="section">
<p class="infoBox">Plugin for opening scene/models from URLs</p>
<!--###PLUGIN_DOC###-->
</td></tr>
<tr><td id="alphabetical" class="section"><pre class="lightGreyBox"><a href="?#getURL">simURLDrop.getURL</a>
<a href="?#openURL">simURLDrop.openURL</a>
</pre></td></tr>
<tr><td id="commands" class="section">
<h3 class="subsectionBar">
<a name="getURL" id="getURL"></a>simURLDrop.getURL</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">
                                                    Description
                                                </td>
<td class="apiTableRightDescr">Fetches the content of a URL.</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">string dataOrFilename = simURLDrop.getURL(string url, int mode=simurldrop_download_mode_buffer)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam">
<div>
<strong>url</strong> (string)</div>
<div>
<strong>mode</strong> (int, default: simurldrop_download_mode_buffer)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet"><div>
<strong>dataOrFilename</strong> (string)</div></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">string dataOrFilename = simURLDrop.getURL(string url, int mode=simurldrop_download_mode_buffer)<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="openURL" id="openURL"></a>simURLDrop.openURL</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">
                                                    Description
                                                </td>
<td class="apiTableRightDescr">Opens a URL using the system's default browser.</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">simURLDrop.openURL(string url)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam"><div>
<strong>url</strong> (string)</div></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet">-</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">simURLDrop.openURL(string url)<br>
</td>
</tr>
</table>
<br>
</td></tr>
<tr><td id="enums" class="section">
<br><br><h1>Constants</h1>
<p>Constants used in the various functions. Refer to each constant using <i>enumName.constantName</i>, i.e. <b>simUI.curve_type.xy</b> for <b>xy</b> constant in <b>simUI.curve_type</b> enum.</p>
<h3 class="subsectionBar">
<a name="enum:download_mode" id="enum:download_mode"></a>simURLDrop.download_mode</h3>
<table class="apiConstantsTable"><tbody><tr><td>
<div><strong>file</strong></div>
<div><strong>buffer</strong></div>
</td></tr></tbody></table>
</td></tr>
<tr><td id="structs" class="section"></td></tr>
<tr><td id="scriptFunctions" class="section"></td></tr>
</table></div>
<script type="text/javascript">
//
view = getParameterByName('view')
document.getElementById('alphabetical').style.display = view == 'alphabetical' ? 'table-cell' : 'none'
document.getElementById('commands').style.display = view == null ? 'table-cell' : 'none'
document.getElementById('enums').style.display = view == null ? 'table-cell' : 'none'
document.getElementById('structs').style.display = view == null ? 'table-cell' : 'none'
document.getElementById('scriptFunctions').style.display = view == null ? 'table-cell' : 'none'
//
                </script><link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css">
<script src="../../js/hljs/11.8.0/highlight.min.js"></script><script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script><script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script><script src="../../js/hljs/11.8.0/languages/java.min.js"></script><script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script><script src="../../js/hljs/11.8.0/languages/lua.min.js"></script><script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script><script src="../../js/hljs/11.8.0/languages/python.min.js"></script><script src="../../js/hljs/11.8.0/languages/rust.min.js"></script><script src="../../js/hljs/11.8.0/languages/xml.min.js"></script><script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
