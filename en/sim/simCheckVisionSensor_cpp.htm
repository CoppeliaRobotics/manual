<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simCheckVisionSensor <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>simCheckVisionSensor <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></h2>
    <p>Checks whether the vision sensor detects the indicated entity. Detection is silent
(no visual feedback) compared to <a href="simHandleVisionSensor.htm">sim.handleVisionSensor</a>.
The <a href="../visionCallbackFunctions.htm">vision callback functions</a> will be called on the
acquired image. Also, the visibility state of the entity is overridden if the entity is an object</p>
</div>

<div class="regApiSection">
    <h3>C++ synopsis</h3>
    <code class="hljs language-c++ coppelia-coppeliasim-plugin">int simCheckVisionSensor(int sensorHandle, int entityHandle, double** auxValues, 
                         int** auxValuesCount)</code>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>sensorHandle</strong>: handle of the vision sensor object</li>
                <li><strong>entityHandle</strong>: handle of entity to detect (object or collection), or sim.handle_all to detect all detectable objects</li>
                <li><strong>auxValues</strong>: by default CoppeliaSim returns one packet of 15 auxiliary values: the minimum of intensity, red, green, blue, depth value, the maximum of intensity, red, green, blue, depth value, and the average of intensity, red, green, blue, depth value. Additional packets can be appended in the <a href="../visionCallbackFunctions.htm">vision callback functions</a>. AuxValues can be nullptr. The user is in charge of releasing the auxValues buffer with <a href="simReleaseBuffer_cpp.htm">simReleaseBuffer</a>(*auxValues).</li>
                <li><strong>auxValuesCount</strong>: contains information about the number of auxiliary value packets and packet sizes returned in auxValues. The first value is the number of packets, the second is the size of packet1, the third is the size of packet2, etc. Can be nullptr if auxValues is also nullptr. The user is in charge of releasing the auxValuesCount buffer with <a href="simReleaseBuffer_cpp.htm">simReleaseBuffer</a>(*auxValuesCount)</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return</h3>
    
            <ul>
                <li>-1 if operation was not successful, otherwise 0 (no detection) or 1 (detection)</li>
            </ul>
        
</div>

<div class="regApiSection">

            <h3>Example</h3>
            <code class="hljs language-c++ coppelia-coppeliasim-plugin">double* auxValues = nullptr;
int* auxValuesCount = nullptr;
double averageColor[3] = {0.0, 0.0, 0.0};
if (simCheckVisionSensor(sensorHandle, entityHandle, &amp;auxValues, &amp;auxValuesCount) &gt;= 0)
{
    if ((auxValuesCount[0] &gt; 0) || (auxValuesCount[1] &gt;= 15))
    {
        averageColor[0] = auxValues[11];
        averageColor[1] = auxValues[12];
        averageColor[2] = auxValues[13];
    }
    simReleaseBuffer((char*)auxValues);
    simReleaseBuffer((char*)auxValuesCount);
}</code>
        
</div>

<p><br>See also:
<ul>
<li><a href="simReadVisionSensor_cpp.htm">simReadVisionSensor</a></li>
<li><a href="simCheckVisionSensorEx_cpp.htm">simCheckVisionSensorEx</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
