<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>sim.addGraphCurve <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<div class="regApiSection">
    <h2>sim.addGraphCurve <small>(in <a href="../apisOverview.htm">sim-2</a>)</small></h2>
    <p>Adds or updates a graph curve. A graph curve is persistent, but can be removed with
<a href="simDestroyGraphCurve.htm">sim.destroyGraphCurve</a>
        </p>
</div>

<div class="regApiSection">
    <h3>Synopsis</h3>
    <div class="multi-language-switcher">
    	<code class="hljs language-python coppelia-coppeliasim-script">int curveId = sim.addGraphCurve(int graphHandle, string curveName, int dim, list streamIds, 
                                list defaultValues, string unitStr, int options = 0, 
                                list color = [0 1, 0], int curveWidth = 2)</code>
        
        <code class="hljs language-lua coppelia-coppeliasim-script">int curveId = sim.addGraphCurve(int graphHandle, string curveName, int dim, int[] streamIds, 
                                float[] defaultValues, string unitStr, int options = 0, 
                                float[3] color = {0, 1, 0}, int curveWidth = 2)</code>
    </div>
</div>

<div  class="regApiSection">
    <h3>Arguments</h3>
    
            <ul>
                <li><strong>graphHandle</strong>: handle of the graph</li>
                <li><strong>curveName</strong>: name of the curve</li>
                <li><strong>dim</strong>: dimension of the curve. Valid values are 2 or 3</li>
                <li><strong>streamIds</strong>: array of 2 or 3 graph streams (x/y curves require 2 stream IDs, xyz curves require 3 stream IDs). Indicate -1 for a missing stream, in which case a default value will be used instead</li>
                <li><strong>defaultValues</strong>: array of 2 or 3 default values</li>
                <li><strong>unitStr</strong>: string describing the unit of the curve. Can be None/nil</li>
                <li><strong>options</strong>: bit-coded:
                    <ul>
                        <li>bit0 is not used.</li>
                        <li>If bit1 is set (2), the label is not visible</li>
                        <li>If bit2 is set (4), the points are not linked</li>
                    </ul>
                </li>
                <li><strong>color</strong>: rgb-triplet, with values between 0.0 and 1.0, indicating the color of the stream. Can be None/nil</li>
                <li><strong>curveWidth</strong>: the width of an xyz curve</li>
            </ul>
        
</div>

<div  class="regApiSection">
    <h3>Return values</h3>
    
            <ul>
                <li><strong>curveId</strong>: id of the created/updated curve</li>
            </ul>
        
</div>

<div class="regApiSection">

</div>

<p><br>See also:
<ul>
<li><a href="../apiFunctions.htm#graphs">functions related to graphs</a></li>
</ul>
</p>

</td>
</tr>
</table>
</div>
<link rel="stylesheet" href="../../js/hljs/11.8.0/styles/default.min.css" />
<script src="../../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
