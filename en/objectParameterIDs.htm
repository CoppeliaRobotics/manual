<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Object Parameter IDs</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td>
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Object Parameter IDs</h1>

<p>Note: object parameters have been replaced by <a href="properties.htm">properties</a>.</p>
<br>
<br>
<p>Refer to the <a href="apiFunctions.htm#objectParameters">API functions related to object parameters</a> for details on following values:<br>
</p>


<h2><a name="sceneObjects" id="sceneObjects"></a>Scene objects <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#object">scene object related properties</a>)</span></h2>
<div class="constList">
<div>sim.objintparam_visibility_layer 
</div><div class=tab>int32 parameter : object visibility layer</div>
<div>sim.objfloatparam_abs_x_velocity </div><div class=tab>float parameter (can only be read) : object absolute x velocity. This is a calculated value. Refer also to <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>.</div>
<div>sim.objfloatparam_abs_y_velocity </div><div class=tab>float parameter (can only be read) : object absolute y velocity. This is a calculated value. Refer also to <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>.</div>
<div>sim.objfloatparam_abs_z_velocity </div><div class=tab>float parameter (can only be read) : object absolute z velocity. This is a calculated value. Refer also to <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>.</div>
<div>sim.objfloatparam_abs_rot_velocity </div><div class=tab>float parameter (can only be read) : object absolute rotational velocity. This is a calculated value. Refer also to <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>.</div>

<div>sim.objfloatparam_objbbox_min_x </div><div class=tab>float parameter (can only be read) : object bounding box, min. x position</div>
<div>sim.objfloatparam_objbbox_min_y </div><div class=tab>float parameter (can only be read) : object bounding box, min. y position</div>
<div>sim.objfloatparam_objbbox_min_z </div><div class=tab>float parameter (can only be read) : object bounding box, min. z position</div>
<div>sim.objfloatparam_objbbox_max_x </div><div class=tab>float parameter (can only be read) : object bounding box, max. x position</div>
<div>sim.objfloatparam_objbbox_max_y </div><div class=tab>float parameter (can only be read) : object bounding box, max. y position</div>
<div>sim.objfloatparam_objbbox_max_z </div><div class=tab>float parameter (can only be read) : object bounding box, max. z position</div>

<div>sim.objfloatparam_modelbbox_min_x </div><div class=tab>float parameter (can only be read) : model bounding box, min. x position. Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_min_y </div><div class=tab>float parameter (can only be read) : model bounding box, min. y position. Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_min_z </div><div class=tab>float parameter (can only be read) : model bounding box, min. z position. Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_max_x </div><div class=tab>float parameter (can only be read) : model bounding box, max. x position. Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_max_y </div><div class=tab>float parameter (can only be read) : model bounding box, max. y position. Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_max_z </div><div class=tab>float parameter (can only be read) : model bounding box, max. z position. Object needs to be flagged as model base.</div>

<div>sim.objintparam_collection_self_collision_indicator </div><div class=tab>int32 parameter : collection self-collision indicator.</div>
<div>sim.objfloatparam_transparency_offset </div><div class=tab>float parameter : transparent object distance offset. When rendering transparent objects, they are ordered from back to front for rendering. With this value you can influence the ordering a bit.</div>
<div>sim.objintparam_manipulation_permissions </div><div class=tab>int32 parameter : object manipulation permissions, bit-coded: bit0 set (1) --> object can be translated during non-simulation, bit1 set (2) --> object can be translated during simulation, bit2 set (4) --> object can be rotated during non-simulation, bit3 set (8) --> object can be rotated during simulation, bit4 set (16) --&gt; object manual shift settings are locked, bit5 set (32) --&gt; object nanual rotation settings are locked.</div>
<div>sim.objintparam_illumination_handle </div><div class=tab>int32 parameter : -1 if object should be illuminated by all light objects, otherwise a light handle (or collection handle) for the light object(s) that should illuminate the object.</div>
<div>sim.objfloatparam_size_factor </div><div class=tab>float parameter : a size factor that will be automatically scaled when the object gets scaled.</div>
<div>sim.objstringparam_unique_id </div><div class=tab>string parameter : a string that uniquely and persistently identifies an object. Can only be read.</div>
<div>sim.objintparam_visible </div><div class=tab>int32 parameter : 0 if the shape is not visible. Can only be read.</div>

<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>



<h2><a name="visionSensors" id="visionSensors"></a>Vision sensors <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#visionSensor">vision sensor related properties</a>)</span></h2>
<div class="constList">
<div>sim.visionfloatparam_near_clipping </div><div class=tab>float parameter : near clipping plane</div>
<div>sim.visionfloatparam_far_clipping </div><div class=tab>float parameter : far clipping plane</div>
<div>sim.visionintparam_resolution_x </div><div class=tab>int32 parameter : resolution x</div>
<div>sim.visionintparam_resolution_y </div><div class=tab>int32 parameter : resolution y</div>
<div>sim.visionfloatparam_perspective_angle </div><div class=tab>float parameter : perspective projection angle</div>
<div>sim.visionfloatparam_ortho_size </div><div class=tab>float parameter : orthographic projection size</div>
<div>sim.visionintparam_disabled_light_components </div><div class=tab>int32 parameter : mask of disabled light components (ambient, diffuse, specular)</div>
<div>sim.visionintparam_rendering_attributes </div><div class=tab>int32 parameter : a combination of <a href="apiConstants.htm#renderingAttributes">rendering attributes</a>. Use with care.</div>
<div>sim.visionintparam_entity_to_render </div><div class=tab>int32 parameter : entity handle of the entity to render, or -1 to render all renderable objects.</div>
<div>sim.visionintparam_windowed_size_x </div><div class=tab>int32 parameter : size X of external windowed rendering. 0 for full-screen.</div>
<div>sim.visionintparam_windowed_size_y </div><div class=tab>int32 parameter : size Y of external windowed rendering. 0 for full-screen.</div>
<div>sim.visionintparam_windowed_pos_x </div><div class=tab>int32 parameter : pos X of external windowed rendering.</div>
<div>sim.visionintparam_windowed_pos_y </div><div class=tab>int32 parameter : pos Y of external windowed rendering.</div>
<div>sim.visionintparam_pov_focal_blur </div><div class=tab>int32 parameter : POV-Ray focal blur enabled flag.</div>
<div>sim.visionfloatparam_pov_blur_distance </div><div class=tab>float parameter : POV-Ray focal blur distance.</div>
<div>sim.visionfloatparam_pov_aperture </div><div class=tab>float parameter : POV-Ray aperture.</div>
<div>sim.visionintparam_pov_blur_sampled </div><div class=tab>int32 parameter : POV-Ray blur samples.</div>
<div>sim.visionintparam_render_mode </div><div class=tab>int32 parameter : Render mode. Use with care. 0=normal, 1=aux. channels, 2=object handles, 3=POV-Ray.</div>
<div>sim.visionintparam_perspective_operation </div><div class=tab>int32 parameter : whether the vision sensor is operated in perspective mode (1) or orthogonal mode (0).</div>
<div>sim.visionfarrayparam_viewfrustum </div><div class=tab>float array parameter : 2 3D vectors, for the near and far view frustum corners.</div>
<div>sim.visionintparam_rgbignored</div><div class=tab>int parameter : whether RGB info is ignored</div>
<div>sim.visionintparam_depthignored</div><div class=tab>int parameter : whether depth info is ignored</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>


<h2><a name="joints" id="joints"></a>Joints <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#joint">joint related properties</a>)</span></h2>
<div class="constList">
<div>sim.jointfloatparam_intrinsic_x </div><div class=tab>float parameter (can only be read) : joint transformation, position X</div>
<div>sim.jointfloatparam_intrinsic_y </div><div class=tab>float parameter (can only be read) : joint transformation, position Y</div>
<div>sim.jointfloatparam_intrinsic_z </div><div class=tab>float parameter (can only be read) : joint transformation, position Z</div>
<div>sim.jointfloatparam_intrinsic_qx </div><div class=tab>float parameter (can only be read) : joint transformation, quaternion X</div>
<div>sim.jointfloatparam_intrinsic_qy </div><div class=tab>float parameter (can only be read) : joint transformation, quaternion Y</div>
<div>sim.jointfloatparam_intrinsic_qz </div><div class=tab>float parameter (can only be read) : joint transformation, quaternion Z</div>
<div>sim.jointfloatparam_intrinsic_qw </div><div class=tab>float parameter (can only be read) : joint transformation, quaternion W</div>
<div>sim.jointfloatparam_velocity </div><div class=tab>float parameter (can only be read) : joint velocity. This is a calculated value.</div>
<div>sim.jointfloatparam_spherical_qx </div><div class=tab>float parameter (can only be written) : spherical joint quaternion (X part). Value is buffered (quaternion will only be written when float parameter 2016 is written)</div>
<div>sim.jointfloatparam_spherical_qy </div><div class=tab>float parameter (can only be written) : spherical joint quaternion (Y part). Value is buffered (quaternion will only be written when float parameter 2016 is written)</div>
<div>sim.jointfloatparam_spherical_qz </div><div class=tab>float parameter (can only be written) : spherical joint quaternion (Z part). Value is buffered (quaternion will only be written when float parameter 2016 is written)</div>
<div>sim.jointfloatparam_spherical_qw </div><div class=tab>float parameter (can only be written) : spherical joint quaternion (W part). Writes a quaternion using also buffered values (see parameters 2013-2015)</div>
<div>sim.jointfloatparam_upper_limit </div><div class=tab>float parameter : joint upper velocity limit. May only have an effect after simulation restart, or after resetting the joint with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.jointfloatparam_kc_k </div><div class=tab>float parameter : dynamic motor spring control K parameter</div>
<div>sim.jointfloatparam_kc_c </div><div class=tab>float parameter : dynamic motor spring control C parameter</div>

<div>sim.jointfloatparam_error_x </div><div class=tab>float parameter : joint internal position error X (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_y </div><div class=tab>float parameter : joint internal position error Y (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_z </div><div class=tab>float parameter : joint internal position error Z (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_a </div><div class=tab>float parameter : joint internal orientation error alpha (euler(0)) (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_b </div><div class=tab>float parameter : joint internal orientation error beta (euler(1)) (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_g </div><div class=tab>float parameter : joint internal orientation error gamma (euler(2)) (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_pos </div><div class=tab>float parameter : joint internal position error (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_angle </div><div class=tab>float parameter : joint internal angular error (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointintparam_vortex_dep_handle </div><div class=tab>int32 parameter : Vortex joint dependency, dependent joint handle. When written, the joint might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> for the change to take effect.</div>
<div>sim.jointfloatparam_vortex_dep_multiplication </div><div class=tab>float parameter : Vortex joint dependency, multiplication factor. When written, the joint might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> for the change to take effect.</div>
<div>sim.jointfloatparam_vortex_dep_offset </div><div class=tab>float parameter : Vortex joint dependency, offset. When written, the joint might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> for the change to take effect.</div>
<div>sim.jointfloatparam_screwlead </div><div class=tab>float parameter : the joint screw lead, if the joint is a revolute joint</div>
<div>sim.jointfloatparam_maxvel</div><div class=tab>float parameter: the maximum allowed velocity, when motion controlled</div>
<div>sim.jointfloatparam_maxaccel</div><div class=tab>float parameter: the maximum allowed acceleration, when motion controlled</div>
<div>sim.jointfloatparam_maxjerk</div><div class=tab>float parameter: the maximum allowed jerk, when motion controlled</div>
<div>sim.jointintparam_dynctrlmode</div>
<div class=tab>int32 parameter: the <a href="apiConstants.htm#ctrlModes">dynamic control mode of the join</a>t</div>
<div>sim.jointintparam_dynvelctrltype</div>
<div class=tab>int32 parameter: the dynamic velocity control type of the joint: 0=none, 1=motion profile</div>
<div>sim.jointintparam_dynposctrltype</div>
<div class=tab>int32 parameter: the dynamic position control type of the joint: 0=built-in, 1=motion profile</div>

<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="shapes" id="shapes"></a>Shapes <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#shape">shape related properties</a>)</span></h2>
<div class="constList">
<div>sim.shapefloatparam_init_velocity_x </div><div class=tab>float parameter : x-component of the initial dynamic linear velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapefloatparam_init_velocity_y </div><div class=tab>float parameter : y-component of the initial dynamic linear velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapefloatparam_init_velocity_z </div><div class=tab>float parameter : z-component of the initial dynamic linear velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapeintparam_static </div><div class=tab>int32 parameter : static state (0 or !=0). Use with care when setting this parameter during simulation (the shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a>)</div>
<div>sim.shapeintparam_kinematic </div><div class=tab>int32 parameter : kinematic state (0 or !=0), mainly to indicate mobile static shapes with the MuJoCo engine.</div>
<div>sim.shapeintparam_respondable </div><div class=tab>int32 parameter : respondable state (0 or !=0). Use with care when setting this parameter during simulation (the shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a>)</div>
<div>sim.shapeintparam_respondablesuspendcnt </div><div class=tab>int32 parameter : number of simulation passes to temporarily suspend the respondable flag of this shape. Can only be written.</div>
<div>sim.shapefloatparam_mass </div><div class=tab>float parameter : mass of the shape. Use with care when setting this parameter during simulation (the shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a>)</div>
<div>sim.shapefloatparam_texture_x </div><div class=tab>float parameter : texture x-coordinate. Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_y </div><div class=tab>float parameter : texture y-coordinate. Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_z </div><div class=tab>float parameter : texture z-coordinate. Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_a </div><div class=tab>float parameter : texture alpha-coordinate (<a href="positionOrientationTransformation.htm#euler">Euler angle</a>). Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_b </div><div class=tab>float parameter : texture beta-coordinate (<a href="positionOrientationTransformation.htm#euler">Euler angle</a>). Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_g </div><div class=tab>float parameter : texture gamma-coordinate (<a href="positionOrientationTransformation.htm#euler">Euler angle</a>). Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_scaling_x </div><div class=tab>float parameter : texture scaling along x. Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_scaling_y </div><div class=tab>float parameter : texture scaling along y. Has no effect when imported texture coordinates are used</div>
<div>sim.shapeintparam_culling </div><div class=tab>int32 parameter : culling state (0 or !=0)</div>
<div>sim.shapeintparam_wireframe </div><div class=tab>int32 parameter : wireframe state (0 or !=0)</div>
<div>sim.shapeintparam_compound </div><div class=tab>int32 parameter : shape compound state (0 if shape is a simple shape, !=0 if shape is a compound shape)</div>
<div>sim.shapeintparam_convex </div><div class=tab>int32 parameter : shape convex state (!=0 if shape mesh(es) is/are convex). This is just a flag. Very careful when setting this value (make sure the mesh(es) is/are closed and perfectly convex). The flag is used to select special and faster collision calculation routines for the physics engines. See also next item</div>
<div>sim.shapeintparam_convex_check </div><div class=tab>int32 parameter : triggers a convectivity check for the given shape. Can only be set (parameter can be any value). The shape's convex state will be set. Normally not needed because done automatically.</div>
<div>sim.shapeintparam_respondable_mask </div><div class=tab>int32 parameter : respondable mask. When setting this parameter during simulation (the shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a>)</div> 

<div>sim.shapefloatparam_init_velocity_a </div><div class=tab>float parameter : alpha-component of the initial dynamic angular velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapefloatparam_init_velocity_b </div><div class=tab>float parameter : beta-component of the initial dynamic angular velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapefloatparam_init_velocity_g </div><div class=tab>float parameter : gamma-component of the initial dynamic angular velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapestringparam_colorname </div>
<div class=tab>string parameter : the color name(s) contained in the shape. If several color strings are contained, they are separated by a space character, unnamed colors are represented by '*'. You can use those strings to modify the color of a simple shape contained in a compound shape with <a href="regularApi/simSetShapeColor.htm">sim.setShapeColor</a>. This parameter can only be written for shapes that are not compound shapes.</div>
<div>sim.shapeintparam_edge_visibility </div><div class=tab>int32 parameter : edge visibility state (0 or !=0).</div>
<div>sim.shapefloatparam_shading_angle </div><div class=tab>float parameter : shading angle.</div>
<div>sim.shapefloatparam_edge_angle </div><div class=tab>float parameter : edge threshold angle.</div>
<div>sim.shapeintparam_edge_borders_hidden </div><div class=tab>int32 parameter : hide edge borders (0 or !=0).</div>
<div>sim.shapeintparam_component_cnt </div><div class=tab>int32 parameter : the number of items in a compound shape, or 1 otherwise.</div>
<div>sim.shapeintparam_sleepmodestart </div><div class=tab>int32 parameter : 1 if the dynamic shape starts in sleep mode.</div>

<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="proximitySensors" id="proximitySensors"></a>Proximity sensors <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#proximitySensor">proximity sensor related properties</a>)</span></h2>
<div class="constList">
<div>sim.proxintparam_ray_invisibility </div><div class=tab>int32 parameter : detection ray invisibility state (0 or !=0)</div>
<div>sim.proxintparam_volume_type </div><div class=tab>int32 parameter : the <a href="apiConstants.htm#volumeTypes">volume type</a> of the proximity sensor. Can only be read.</div>
<div>sim.proxintparam_entity_to_detect </div><div class=tab>int32 parameter : entity handle of the entity to detect, or -1 to detect all detectable objects.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="forceSensors" id="forceSensors"></a>Force sensors <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#forceSensor">force sensor related properties</a>)</span></h2>
<div class="constList">
<div>sim.forcefloatparam_error_x </div><div class=tab>float parameter : force sensor internal position error X. Can only be read.</div>
<div>sim.forcefloatparam_error_y </div><div class=tab>float parameter : force sensor internal position error Y. Can only be read.</div>
<div>sim.forcefloatparam_error_z </div><div class=tab>float parameter : force sensor internal position error Z. Can only be read.</div>
<div>sim.forcefloatparam_error_a </div><div class=tab>float parameter : force sensor internal orientation error alpha (euler(0)). Can only be read.</div>
<div>sim.forcefloatparam_error_b </div><div class=tab>float parameter : force sensor internal orientation error beta (euler(1)). Can only be read.</div>
<div>sim.forcefloatparam_error_g </div><div class=tab>float parameter : force sensor internal orientation error gamma (euler(2)). Can only be read.</div>
<div>sim.forcefloatparam_error_pos </div><div class=tab>float parameter : force sensor internal position error. Can only be read.</div>
<div>sim.forcefloatparam_error_angle </div><div class=tab>float parameter : force sensor internal angular error. Can only be read.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="graphs" id="graphs"></a>Graphs <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#graph">graph related properties</a>)</span></h2>
<div class="constList">
<div>sim.graphintparam_needs_refresh </div><div class=tab>int32 parameter : reads and clears the refresh flag.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="lights" id="lights"></a>Lights <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#light">light related properties</a>)</span></h2>
<div class="constList">
<div>sim.lightintparam_pov_casts_shadows </div><div class=tab>int32 parameter : POV-Ray light casts shadows.</div>
<div>sim.lightfloatparam_spot_exponent </div><div class=tab>float parameter : light spot exponent.</div>
<div>sim.lightfloatparam_spot_cutoff </div><div class=tab>float parameter : light spot cutoff.</div>
<div>sim.lightfloatparam_const_attenuation </div><div class=tab>float parameter : light constant attenuation factor.</div>
<div>sim.lightfloatparam_lin_attenuation </div><div class=tab>float parameter : light linear attenuation factor.</div>
<div>sim.lightfloatparam_quad_attenuation </div><div class=tab>float parameter : light quadratic attenuation factor.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="cameras" id="cameras"></a>Cameras <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#camera">camera related properties</a>)</span></h2>
<div class="constList">
<div>sim.cameraintparam_disabled_light_components </div><div class=tab>int32 parameter : mask of disabled light components (ambient, diffuse, specular)</div>
<div>sim.camerafloatparam_perspective_angle </div><div class=tab>float parameter : camera perspective angle.</div>
<div>sim.camerafloatparam_ortho_size </div><div class=tab>float parameter : camera orthographic size.</div>
<div>sim.cameraintparam_rendering_attributes </div><div class=tab>int32 parameter : a combination of <a href="apiConstants.htm#renderingAttributes">rendering attributes</a>. Use with care.</div>
<div>sim.cameraintparam_pov_focal_blur </div><div class=tab>int32 parameter : POV-Ray focal blur enabled flag.</div>
<div>sim.camerafloatparam_pov_blur_distance </div><div class=tab>float parameter : POV-Ray focal blur distance.</div>
<div>sim.camerafloatparam_pov_aperture </div><div class=tab>float parameter : POV-Ray aperture.</div>
<div>sim.cameraintparam_pov_blur_samples </div><div class=tab>int32 parameter : POV-Ray blur samples.</div>
<div>sim.camerafloatparam_near_clipping </div><div class=tab>float parameter : near clipping plane</div>
<div>sim.camerafloatparam_far_clipping </div><div class=tab>float parameter : far clipping plane</div>
<div>sim.cameraintparam_perspective_operation </div><div class=tab>int32 parameter : whether the camera is operated in perspective mode (1) or orthogonal mode (0).</div>
<div>sim.cameraintparam_remotecameramode </div><div class=tab>int32 parameter : the remote camera mode. Remote camera can be free (0), slave (1) or master (2).</div>
<div>sim.camerafarrayparam_viewfrustum </div><div class=tab>float array parameter : 2 3D vectors, for the near and far view frustum corners.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="dummies" id="dummies"></a>Dummies <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#dummy">dummy related properties</a>)</span></h2>
<div class="constList">
<div>sim.dummyintparam_dummytype </div><div class=tab>int32 parameter : <a href="apiConstants.htm#dummyTypes">dummy type</a>.</div>
<div>sim.dummyfloatparam_size </div><div class=tab>float parameter : the size of the dummy.</div>
<div>sim.dummystringparam_assemblytag </div><div class=tab>string parameter : the assembly tag.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>


<h2><a name="scripts" id="scripts"></a>Scripts <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#script">script related properties</a>)</span></h2>
<div class="constList">

<div>sim.scriptintparam_execorder</div>  <div class=tab>Integer attribute, see the <a href="apiConstants.htm#scriptExecutionOrder">script execution priorities</a></div>
<div>sim.scriptintparam_execcount</div>  <div class=tab>Integer attribute, cannot be written</div>
<div>sim.scriptintparam_type</div>  <div class=tab>Integer attribute, cannot be written</div>
<div>sim.scriptintparam_enabled</div>  <div class=tab>Integer attribute</div>
<div>sim.scriptintparam_autorestartonerror</div>  <div class=tab>Integer attribute, can only be written and is auto-cleared</div>
<div>sim.scriptstringparam_description</div>  <div class=tab>String attribute, describes the script</div>
<div>sim.scriptstringparam_name</div>  <div class=tab>String attribute</div>
<div>sim.scriptstringparam_text</div>  <div class=tab>String attribute</div>
<div>sim.scriptstringparam_namext</div>  <div class=tab>String attribute</div>
<div>sim.scriptstringparam_lang</div>  <div class=tab>String attribute</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>


<h2><a name="octrees" id="octrees"></a>OC trees <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#ocTree">OC tree related properties</a>)</span></h2>
<div class="constList">
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>


<h2><a name="pointClouds" id="pointClouds"></a>Point clouds <span style="font-size: 60%;">(preferably, use <a href="propertiesReference.htm#pointCloud">point cloud related properties</a>)</span></h2>
<div class="constList">
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>



<br>
<br>
</td>
 </tr>
</table> 
</div>  
  
  
</body>

</html>